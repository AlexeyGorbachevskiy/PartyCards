{"version":3,"sources":["main/ui/routes/settings/newPassword/NewPassword.module.scss","main/ui/routes/settings/passwordRestore/PasswordRestore.module.scss","features/f0-test/Feature0.module.scss","main/ui/routes/home/Home.module.scss","main/ui/common/checkbox/Checkbox.module.scss","main/ui/header/header.module.scss","main/ui/common/input/Input.module.scss","main/ui/common/button/Button.module.scss","main/ui/routes/settings/Settings.module.scss","main/ui/routes/features/Features.module.scss","main/dal/API.ts","main/bll/state/appReducer.ts","main/bll/state/authReducer.ts","main/bll/state/registerReducer.ts","main/bll/state/newPasswordReducer.ts","main/bll/state/loginReducer.ts","main/ui/header/header.tsx","main/ui/routes/home/Home.tsx","main/utilities/hoc/withAuthRedirect.tsx","main/bll/state/profileReducer.ts","main/ui/common/preloader/Preloader.tsx","main/ui/routes/profile/Profile.tsx","main/ui/common/input/Input.tsx","main/ui/common/checkbox/Checkbox.tsx","main/ui/common/button/Button.tsx","main/ui/routes/login/Login.tsx","main/ui/routes/register/Register.tsx","main/ui/routes/settings/Settings.tsx","main/ui/routes/settings/newPassword/NewPassword.tsx","main/bll/state/passwordRestoreReducer.ts","main/ui/routes/settings/passwordRestore/PasswordRestore.tsx","main/ui/routes/features/Features.tsx","features/f0-test/Feature0.tsx","main/bll/state/packsReducer.ts","main/ui/routes/packs/Packs.tsx","App.tsx","serviceWorker.ts","main/bll/state/store.ts","index.tsx","main/ui/common/preloader/Preloader.module.css","main/ui/routes/profile/Profile.module.scss","main/ui/routes/login/Login.module.scss","main/ui/routes/packs/Packs.module.scss","main/ui/routes/register/Register.module.scss"],"names":["module","exports","axiosInstance","axios","create","baseURL","withCredentials","loginAPI","email","password","remember","post","delete","authAPI","registerAPI","values","profileAPI","name","avatar","put","settingsAPI","from","message","token","resetPasswordToken","packsAPI","min","max","page","pageSize","get","packName","privatePack","cardsPack","private","packId","_id","myAccountId","console","log","initialState","isCurrentPageProfile","initialized","INITIALIZED_SUCCESS","SET_PROFILE_AS_CURRENT_PAGE","initializedSuccessAC","type","setIsCurrentPageProfileAC","isCurrentPge","appReducer","state","action","isAuth","SET_AUTH","setAuthDataAC","getAuthInfoThunkCreator","dispatch","then","res","data","setLoginDataAC","catch","e","registerError","status","SET_ERROR","SET_STATUS","setRegisterErrorAC","setRegisterStatusAC","mewPasswordMessage","newPasswordError","SET_NEW_PASSWORD_MESSAGE","SET_NEW_PASSWORD_ERROR","setNewPasswordSuccessMessageAC","setNewPasswordErrorAC","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","isLoading","SET_LOGIN_DATA","SET_LOADING","loginData","setLoginErrorAC","setLoadingAC","Header","style","arrow_down","faAngleDown","useSelector","app","useState","isToggleCollapsed","setToggleCollapsed","auth","useDispatch","logout","response","className","header","backgroundColor","container","logo_wrapper","logo_link","to","navbar","activeClassName","active_link","link","onClick","btn_toggler","btn_collapse","vertical_navbar","particlesOptions","Home","home","particles","params","title_wrapper","withAuthRedirect","Component","props","SAVE_PROFILE_INFO","Preloader","obj","preloader","src","process","alt","compose","login","loginName","loginAvatar","loginEmail","setName","setAvatar","isChangeBtnClicked","setIsChangeBtnClicked","useEffect","display","justifyContent","alignItems","profile","profile_info","profile_info_header","profile_info_header_content","position","onChange","currentTarget","value","changeInfoThunkCreator","profile_info_save_btn","profile_info_change_btn","extra_info","profile_settings","Input","propsI","onEnter","onKeyPress","charCode","input","Checkbox","label","checkbox","labelText","Button","children","Login","setEmail","setPassword","setRemember","stateError","registerStatus","register","newPasswordMessage","newPassword","errorStyle","setErrorStyle","borderColor","login_form","color","fontSize","textAlign","maxWidth","credentials","form","placeholder","checked","trim","loginThunkCreator","width","zIndex","Register","errorStyle1","setErrorStyle1","errorStyle2","setErrorStyle2","formik","useFormik","validate","initialValues","onSubmit","registerThunkCreator","resetForm","register_form","id","handleChange","errors","handleSubmit","Settings","NewPassword","successMessage","useParams","new_password","new_password_form","info","setNewPasswordThunkCreator","passwordRestoreError","passwordRestoreSuccessMessage","SET_SUCCESS_MESSAGE","setSettingsErrorAC","setSettingsSuccessMessageAC","PasswordRestore","passwordRestore","password_restore","password_restore_form","restorePasswordThunkCreator","setTimeout","features","checkboxValue","setCheckboxValue","inputValue","setInputValue","feature0","common","checkbox_wrapper","input_wrapper","btn_wrapper","currentMinCardsCount","currentMaxCardsCount","preflightTotalCount","packsData","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","pageCount","tokenDeathTime","packsError","SET_PACKS_DATA","SET_MIN_MAX_CARDS_COUNT","setMinMaxCardsCountsAC","setPacksErrorAC","setPacksDataAC","getPacksThunkCreator","updatePackThunkCreator","EditableCell","editing","dataIndex","title","record","inputType","index","restProps","editableInputValue","setEditableInputValue","inputNode","target","Item","margin","rules","required","packs","currentPage","Number","Form","useForm","editingKey","setEditingKey","isEditing","key","columns","align","editable","render","_","size","savePack","marginRight","onConfirm","cancel","editPack","deletePack","text","dataSource","map","el","cardsCount","Date","toLocaleString","deletePackThunkCreator","setFieldsValue","a","oldName","newName","stateVisible","setStateVisible","modalInputValue","setModalInputValue","modalCheckboxValue","setModalCheckboxChange","showModal","searchInputValue","setSearchInputValue","searchCheckboxValue","setSearchCheckboxValue","mergedColumns","col","onCell","maskClosable","destroyOnClose","centered","visible","onOk","postNewPackThunkCreator","onCancel","marginTop","pack_settings","add_btn","marginLeft","twice_slider","marks","0","26","range","step","defaultValue","onAfterChange","search_wrapper","search_checkbox","Search","search","onSearch","myId","searchForPackName","enterButton","loading","component","table","components","body","cell","bordered","rowClassName","editableRow","scroll","x","y","pagination","total","defaultPageSize","showSizeChanger","pageSizeOptions","App","userId","getState","exact","path","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57615c27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"new_password\":\"NewPassword_new_password__2BPgX\",\"new_password_form\":\"NewPassword_new_password_form__1H4nf\",\"form\":\"NewPassword_form__2vPYl\",\"input\":\"NewPassword_input__1V696\",\"password\":\"NewPassword_password__18W2E\",\"error\":\"NewPassword_error__2FJCV\",\"successMessage\":\"NewPassword_successMessage__1RvbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"password_restore\":\"PasswordRestore_password_restore__3d5cq\",\"password_restore_form\":\"PasswordRestore_password_restore_form__3cL8m\",\"form\":\"PasswordRestore_form__PWpVz\",\"input\":\"PasswordRestore_input__1GrcZ\",\"email\":\"PasswordRestore_email__2mtYU\",\"password\":\"PasswordRestore_password__PanrV\",\"error\":\"PasswordRestore_error__3W3IG\",\"successMessage\":\"PasswordRestore_successMessage__Hackm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feature0\":\"Feature0_feature0__3WLOo\",\"common\":\"Feature0_common__g-tSn\",\"input_wrapper\":\"Feature0_input_wrapper__3Jgy2\",\"btn_wrapper\":\"Feature0_btn_wrapper__283DC\",\"checkbox_wrapper\":\"Feature0_checkbox_wrapper__25EUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__AjyEs\",\"particles\":\"Home_particles__36Grd\",\"title_wrapper\":\"Home_title_wrapper__3X7vQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"label\":\"Checkbox_label__2X1Yg\",\"checkbox\":\"Checkbox_checkbox__2weTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"header\":\"header_header__GKVcJ\",\"container\":\"header_container__3mAkQ\",\"logo_wrapper\":\"header_logo_wrapper__3RVIo\",\"logo_link\":\"header_logo_link__1q_JQ\",\"navbar\":\"header_navbar__3IRKj\",\"sub_menu_wrapper\":\"header_sub_menu_wrapper__vvg2N\",\"link\":\"header_link__hBm0G\",\"arrow_down\":\"header_arrow_down__Qg_RU\",\"active_link\":\"header_active_link__2AOd8\",\"sub_link\":\"header_sub_link__2gvmt\",\"btn_toggler\":\"header_btn_toggler__j2h3Y\",\"btn_collapse\":\"header_btn_collapse__1HNc0\",\"vertical_navbar\":\"header_vertical_navbar__2OaZF\",\"features_vertical_sub_menu_wrapper\":\"header_features_vertical_sub_menu_wrapper__32ZxF\",\"settings_vertical_sub_menu_wrapper\":\"header_settings_vertical_sub_menu_wrapper__1p9qF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"input\":\"Input_input__1n4NA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"container\":\"Button_container__3_c7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__2NJoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"features\":\"Features_features__mGMdp\"};","import axios from \"axios\";\r\nimport {registerFieldsType} from \"../bll/state/registerReducer\";\r\n\r\n\r\nconst axiosInstance = axios.create(\r\n    {\r\n        // TODO Change before every deploy\r\n        baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n        // baseURL: 'http://localhost:7542/2.0/',\r\n        withCredentials: true,\r\n        // headers: {'API-KEY': '0b2bdd80-32f2-11ea-aa6d-ebd61add4aaa'}\r\n    },\r\n);\r\n// declare module 'axios' {\r\n//     export interface AxiosRequestConfig {\r\n//         page?: number;\r\n//     }\r\n// }\r\n\r\ntype LoginResponseType = {}\r\n\r\n// email: \"nya-admin@nya.nya\"\r\n// password: \"1qazxcvBG\"\r\nexport const loginAPI = {\r\n    login(email: string, password: string, remember: boolean) {\r\n        return (\r\n            axiosInstance.post(`auth/login`, {email, password, remember})\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            axiosInstance.delete(`auth/me`, {})\r\n        )\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    auth() {\r\n        return (\r\n            axiosInstance.post('auth/me', {})\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const registerAPI = {\r\n    register(values: registerFieldsType) {\r\n        return (\r\n            axiosInstance.post('auth/register', values)\r\n        )\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    changeInfo(name: string, avatar: string) {\r\n        return (\r\n            axiosInstance.put('auth/me', {name, avatar})\r\n        )\r\n    }\r\n}\r\n\r\nexport const settingsAPI = {\r\n    restore(email: string) {\r\n        return (\r\n            axiosInstance.post('auth/forgot', {\r\n                email,\r\n                from: '<alexeygorbachevskiyy@gmail.com>',\r\n                message: `<div style=\"background-color: lime; padding:15px; font-size: 16px\">\r\nPassword recovery link: \r\n<!--TODO Change before every deploy-->\r\n<a href=\"https://alexeygorbachevskiy.github.io/PartyCards/#/new_password/$token$\">Link</a>\r\n<!--<a href=\"http://localhost:3000/PartyCards#/new_password/$token$\">Link</a>-->\r\n</div>`\r\n            })\r\n        )\r\n    },\r\n\r\n    setNewPassword(password: string, token: string) {\r\n\r\n        return (\r\n            axiosInstance.post('auth/set-new-password', {password, resetPasswordToken: token})\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const packsAPI = {\r\n    //?&pageCount=817\r\n    getPacks(min: number, max: number, page: number, pageSize: number) {\r\n        return (\r\n            axiosInstance.get(`cards/pack?&pageCount=${pageSize}&page=${page}&min=${min}&max=${max}`)\r\n        )\r\n    },\r\n    postPack(packName: string, privatePack: boolean) {\r\n        return (\r\n            axiosInstance.post(`cards/pack`, {cardsPack: {name: packName, private: privatePack}})\r\n        )\r\n    },\r\n    updatePack(packId: string, packName: string) {\r\n        return (\r\n            axiosInstance.put(`cards/pack`, {cardsPack: {_id: packId, name: packName}})\r\n        )\r\n    },\r\n    deletePack(packId: string) {\r\n        return (\r\n            axiosInstance.delete(`cards/pack?id=${packId}`)\r\n        )\r\n    },\r\n    searchForPackName(packName: string, myAccountId: string,min: number, max: number, page: number, pageSize: number){\r\n        console.log(myAccountId)\r\n        return (\r\n            axiosInstance.get(`cards/pack?&pageCount=${pageSize}&page=${page}&min=${min}&max=${max}&packName=${packName}&user_id=${myAccountId}`)\r\n        )\r\n    }\r\n\r\n}\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootType} from \"./store\";\r\nimport {getAuthInfoThunkCreator} from \"./authReducer\";\r\n\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    isCurrentPageProfile: false,\r\n    initialized: false\r\n}\r\n\r\nexport type AppReducerActionTypes = InitializedSuccessACType | SetIsCurrentPageProfileACType\r\nconst appReducer = (state: initialStateType = initialState, action: AppReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n\r\n            }\r\n        }\r\n\r\n        case SET_PROFILE_AS_CURRENT_PAGE:{\r\n            return {\r\n                ...state,\r\n                isCurrentPageProfile: action.isCurrentPge\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\nconst SET_PROFILE_AS_CURRENT_PAGE = 'SET_PROFILE_AS_CURRENT_PAGE';\r\n\r\nexport type InitializedSuccessACType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nexport type SetIsCurrentPageProfileACType = {\r\n    type: typeof SET_PROFILE_AS_CURRENT_PAGE,\r\n    isCurrentPge: boolean\r\n}\r\n\r\n\r\nexport const initializedSuccessAC = (): InitializedSuccessACType => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const setIsCurrentPageProfileAC = (isCurrentPge:boolean): SetIsCurrentPageProfileACType => ({\r\n    type: SET_PROFILE_AS_CURRENT_PAGE, isCurrentPge\r\n});\r\n\r\n\r\nexport const initializeAppThunkCreator = (): ThunkAction<void, AppRootType, unknown, AppReducerActionTypes> => {\r\n    return (\r\n        (dispatch: any, getState) => {\r\n            dispatch(getAuthInfoThunkCreator())\r\n        }\r\n    )\r\n};\r\n\r\n\r\nexport default appReducer;\r\n","\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../dal/API\";\r\nimport {setLoginDataAC, SetLoginDataACType} from \"./loginReducer\";\r\nimport {initializedSuccessAC, InitializedSuccessACType} from \"./appReducer\";\r\n\r\nexport type initialStateType = typeof initialState\r\nconst initialState = {\r\n    isAuth:false,\r\n}\r\n\r\n\r\ntype ActionTypes = AuthDataACResponseType | SetLoginDataACType\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n\r\n\r\n        case SET_AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst SET_AUTH = 'SET_AUTH'\r\n\r\nexport type AuthDataACResponseType = {\r\n    type: typeof SET_AUTH,\r\n    isAuth:boolean\r\n}\r\n\r\nexport const setAuthDataAC = (isAuth: boolean): AuthDataACResponseType => {\r\n    return {type: 'SET_AUTH', isAuth}\r\n}\r\n\r\nexport const getAuthInfoThunkCreator = () => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | InitializedSuccessACType>) => {\r\n\r\n            authAPI.auth()\r\n                .then((res) => {\r\n                    console.log(res.data)\r\n                    dispatch(setLoginDataAC(res.data))\r\n                    dispatch(setAuthDataAC(true))\r\n\r\n                    dispatch(initializedSuccessAC())\r\n\r\n                })\r\n                .catch((e) => {\r\n                    dispatch(initializedSuccessAC())\r\n                    // const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    // dispatch(setLoginErrorAC(error))\r\n                    // console.log('Error', error)\r\n\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n","// export let smth = v1();\r\n\r\nimport {Dispatch} from \"redux\";\r\nimport {AuthDataACResponseType} from \"./authReducer\";\r\nimport {registerAPI} from \"../../dal/API\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    registerError: '',\r\n    status: 0,\r\n}\r\n\r\n\r\ntype ActionTypes = SetRegisterErrorACType | SetRegisterStatusACType\r\n\r\nexport const registerReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                registerError: action.registerError\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nexport type SetRegisterErrorACType = {\r\n    type: typeof SET_ERROR,\r\n    registerError: string\r\n}\r\nexport type SetRegisterStatusACType = {\r\n    type: typeof SET_STATUS,\r\n    status: number\r\n}\r\n\r\nexport const setRegisterErrorAC = (registerError: string): SetRegisterErrorACType => {\r\n    return {type: 'SET_ERROR', registerError}\r\n}\r\nexport const setRegisterStatusAC = (status: number): SetRegisterStatusACType => {\r\n    return {type: 'SET_STATUS', status}\r\n}\r\n\r\nexport type registerFieldsType = {\r\n    email: string,\r\n    password: string\r\n}\r\n\r\n\r\nexport const registerThunkCreator = (values: registerFieldsType) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | AuthDataACResponseType | SetLoadingACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            registerAPI.register(values)\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    dispatch(setRegisterStatusAC(res.status))\r\n                    dispatch(setLoadingAC(false))\r\n                    dispatch(setRegisterErrorAC(''))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setRegisterErrorAC(error))\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport {Dispatch} from \"redux\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\nimport {settingsAPI} from \"../../dal/API\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState= {\r\n    mewPasswordMessage:'',\r\n    newPasswordError:'',\r\n}\r\n\r\n\r\ntype ActionTypes = SetNewPasswordSuccessMessageACType | SetNewPasswordErrorACType\r\n\r\nexport const newPasswordReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType=> {\r\n    switch (action.type) {\r\n\r\n        case SET_NEW_PASSWORD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                mewPasswordMessage:action.mewPasswordMessage\r\n            }\r\n        }\r\n        case SET_NEW_PASSWORD_ERROR: {\r\n            return {\r\n                ...state,\r\n                newPasswordError: action.newPasswordError\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_NEW_PASSWORD_MESSAGE='SET_NEW_PASSWORD_MESSAGE'\r\nconst SET_NEW_PASSWORD_ERROR='SET_NEW_PASSWORD_ERROR'\r\n\r\nexport type SetNewPasswordSuccessMessageACType = {\r\n    type: typeof SET_NEW_PASSWORD_MESSAGE,\r\n    mewPasswordMessage: string\r\n}\r\nexport type SetNewPasswordErrorACType = {\r\n    type: typeof SET_NEW_PASSWORD_ERROR,\r\n    newPasswordError: string\r\n}\r\n\r\nexport const setNewPasswordSuccessMessageAC = (mewPasswordMessage: string): SetNewPasswordSuccessMessageACType => {\r\n    return {type: 'SET_NEW_PASSWORD_MESSAGE', mewPasswordMessage}\r\n}\r\nexport const setNewPasswordErrorAC = (newPasswordError: string): SetNewPasswordErrorACType => {\r\n    return {type: 'SET_NEW_PASSWORD_ERROR', newPasswordError}\r\n}\r\n\r\nexport const setNewPasswordThunkCreator = (password: string, token:string) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            settingsAPI.setNewPassword(password,token)\r\n                .then((res) => {\r\n                    // console.log(res)\r\n                    dispatch(setNewPasswordSuccessMessageAC(res.data.info))\r\n                    dispatch(setNewPasswordErrorAC(''))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    dispatch(setNewPasswordErrorAC(error))\r\n\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n","// export let smth = v1();\r\n\r\n\r\nimport {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../../dal/API\";\r\nimport {AuthDataACResponseType, setAuthDataAC} from \"./authReducer\";\r\nimport {\r\n    setRegisterErrorAC,\r\n    SetRegisterErrorACType,\r\n    setRegisterStatusAC,\r\n    SetRegisterStatusACType\r\n} from \"./registerReducer\";\r\nimport {\r\n    setNewPasswordErrorAC,\r\n    SetNewPasswordErrorACType,\r\n    setNewPasswordSuccessMessageAC,\r\n    SetNewPasswordSuccessMessageACType\r\n} from \"./newPasswordReducer\";\r\n\r\nexport type initialStateType = typeof initialState\r\nconst initialState = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: '',\r\n    updated: '',\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n\r\n    error: '',\r\n    isLoading: false,\r\n}\r\n\r\n\r\ntype ActionTypes = SetLoginDataACType | SetLoginErrorACType | SetLoadingACType\r\n\r\nexport const loginReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SET_LOGIN_DATA: {\r\n            return {\r\n                ...state,\r\n                _id: action.loginData._id,\r\n                email: action.loginData.email,\r\n                name: action.loginData.name,\r\n                avatar: action.loginData.avatar,\r\n                publicCardPacksCount: action.loginData.publicCardPacksCount,\r\n                created: action.loginData.created,\r\n                updated: action.loginData.updated,\r\n                isAdmin: action.loginData.isAdmin,\r\n                verified: action.loginData.verified,\r\n                rememberMe: action.loginData.rememberMe,\r\n                error: '',\r\n            }\r\n        }\r\n\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_LOGIN_DATA = 'SET_LOGIN_DATA'\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_LOADING = 'SET_LOADING'\r\n\r\nexport type LoginDataResponseType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    avatar: string,\r\n    publicCardPacksCount: number,\r\n    created: string,\r\n    updated: string,\r\n    isAdmin: boolean,\r\n    verified: boolean,\r\n    rememberMe: boolean,\r\n}\r\nexport type SetLoginDataACType = {\r\n    type: typeof SET_LOGIN_DATA,\r\n    loginData: LoginDataResponseType\r\n}\r\n\r\nexport type SetLoginErrorACType = {\r\n    type: typeof SET_ERROR,\r\n    error: string\r\n}\r\nexport type SetLoadingACType = {\r\n    type: typeof SET_LOADING\r\n    isLoading: boolean\r\n}\r\n\r\nexport const setLoginDataAC = (loginData: LoginDataResponseType): SetLoginDataACType => {\r\n    return {type: 'SET_LOGIN_DATA', loginData}\r\n}\r\n\r\nexport const setLoginErrorAC = (error: string): SetLoginErrorACType => {\r\n    return {type: 'SET_ERROR', error}\r\n}\r\nexport const setLoadingAC = (isLoading: boolean): SetLoadingACType => {\r\n    return {type: 'SET_LOADING', isLoading}\r\n}\r\n\r\nexport const loginThunkCreator = (email: string, password: string, remember: boolean) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | AuthDataACResponseType | SetRegisterStatusACType | SetRegisterErrorACType\r\n            | SetNewPasswordErrorACType | SetNewPasswordSuccessMessageACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            loginAPI.login(email, password, remember)\r\n                .then((res) => {\r\n                    console.log(res)\r\n\r\n                    dispatch(setLoginDataAC(res.data))\r\n                    dispatch(setAuthDataAC(true))\r\n\r\n                    // reset register state\r\n                    dispatch(setRegisterStatusAC(0))\r\n                    dispatch(setRegisterErrorAC(''))\r\n\r\n                    //reset new Password state\r\n                    dispatch(setNewPasswordErrorAC(''))\r\n                    dispatch(setNewPasswordSuccessMessageAC(''))\r\n\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    dispatch(setLoginErrorAC(error))\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nexport const logoutThunkCreator = () => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | AuthDataACResponseType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            loginAPI.logout()\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    dispatch(setLoginDataAC(res.data))\r\n                    dispatch(setAuthDataAC(false))\r\n\r\n                    // loader doesn't not appears\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + ' more details in console')\r\n                    dispatch(setLoginErrorAC(error))\r\n                    console.log('Error', error)\r\n\r\n                    // loader doesn't not appears\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './header.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleDown} from '@fortawesome/free-solid-svg-icons'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootType} from \"../../bll/state/store\";\r\nimport {logoutThunkCreator} from \"../../bll/state/loginReducer\";\r\n\r\nconst arrowDownElement = <FontAwesomeIcon className={style.arrow_down} icon={faAngleDown}/>\r\n\r\n\r\nconst Header = () => {\r\n\r\n    //for header background color\r\n    const isCurrentPageProfile = useSelector<AppRootType, boolean>(state => state.app.isCurrentPageProfile);\r\n\r\n\r\n    const [isToggleCollapsed, setToggleCollapsed] = useState<boolean>(true);\r\n    const [isFeaturesSubMenuExpanded, setFeaturesSubMenuExpanded] = useState<boolean>(false);\r\n    const [isSettingsSubMenuExpanded, setSettingsSubMenuExpanded] = useState<boolean>(false);\r\n\r\n    let isAuth = useSelector<AppRootType, boolean>(state => state.auth.isAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        dispatch(logoutThunkCreator())\r\n    }\r\n\r\n    const onToggleMenu = () => {\r\n        setToggleCollapsed(!isToggleCollapsed);\r\n\r\n    }\r\n\r\n    const onExpandFeaturesSubMenu = () => {\r\n        if (isSettingsSubMenuExpanded) {\r\n            setSettingsSubMenuExpanded(false)\r\n        }\r\n        setFeaturesSubMenuExpanded(!isFeaturesSubMenuExpanded)\r\n\r\n    }\r\n    const onExpandSettingsSubMenu = () => {\r\n        if (isFeaturesSubMenuExpanded) {\r\n            setFeaturesSubMenuExpanded(false)\r\n        }\r\n        setSettingsSubMenuExpanded(!isSettingsSubMenuExpanded)\r\n    }\r\n\r\n    const onBlurFeaturesSubMenu = () => {\r\n        setFeaturesSubMenuExpanded(false)\r\n    }\r\n    const onBlurSettingsSubMenu = () => {\r\n        setSettingsSubMenuExpanded(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.header}\r\n             style={isCurrentPageProfile ? {backgroundColor: '#1e2326'} : {backgroundColor: 'transparent'}}>\r\n            <div className={style.container}\r\n                 style={!isToggleCollapsed ? {'backgroundColor': '#1e2326'} : {'backgroundColor': 'transparent'}}>\r\n\r\n                <div className={style.logo_wrapper}>\r\n                    <NavLink className={style.logo_link} to={'/home'}>\r\n                        Party<span>Cards</span>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <ul className={style.navbar}>\r\n                    <li>\r\n                        <NavLink activeClassName={style.active_link} className={style.link} to={'/home'}>Home</NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink activeClassName={style.active_link} className={style.link}\r\n                                 to={'/profile'}>Profile</NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink activeClassName={style.active_link} className={style.link}\r\n                                 to={'/packs'}>Packs</NavLink>\r\n                    </li>\r\n\r\n                    {/*<li>*/}\r\n                    {/*    <NavLink activeClassName={style.active_link} className={style.link}*/}\r\n                    {/*             to={'/features'}>Features {arrowDownElement}</NavLink>*/}\r\n                    {/*    <ul className={style.sub_menu_wrapper}>*/}\r\n                    {/*        <li>*/}\r\n                    {/*            <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                    {/*                     to={'/feature0'}>Feature 0</NavLink>*/}\r\n                    {/*        </li>*/}\r\n\r\n                    {/*        /!*<li>*!/*/}\r\n                    {/*        /!*    <NavLink activeClassName={style.active_link} className={style.sub_link}*!/*/}\r\n                    {/*        /!*             to={'/feature_1'}>Feature 1</NavLink>*!/*/}\r\n                    {/*        /!*</li>*!/*/}\r\n                    {/*        /!*<li>*!/*/}\r\n                    {/*        /!*    <NavLink activeClassName={style.active_link} className={style.sub_link}*!/*/}\r\n                    {/*        /!*             to={'/feature_2'}>Feature 2</NavLink>*!/*/}\r\n                    {/*        /!*</li>*!/*/}\r\n\r\n                    {/*    </ul>*/}\r\n\r\n                    {/*</li>*/}\r\n\r\n\r\n                    {\r\n                        isAuth ? '' :\r\n                            <li>\r\n                                <NavLink activeClassName={style.active_link} className={style.link}\r\n                                         to={'/password_restore'}>Restore</NavLink>\r\n                            </li>\r\n                    }\r\n\r\n                    {\r\n                        isAuth ? '' :\r\n\r\n                            <li>\r\n                                <NavLink activeClassName={style.active_link} className={style.link}\r\n                                         to={'/register'}>Register</NavLink>\r\n                            </li>\r\n                    }\r\n\r\n                    {\r\n                        isAuth ?\r\n                            <li>\r\n                                <NavLink onClick={logout}\r\n                                         className={style.logout + ' ' + style.link}\r\n                                         to={'#'}>Log Out\r\n                                </NavLink>\r\n                            </li>\r\n                            :\r\n                            <li>\r\n                                <NavLink activeClassName={style.active_link} className={style.link}\r\n                                         to={'/login'}>Log In\r\n                                </NavLink>\r\n                            </li>\r\n                    }\r\n\r\n\r\n                </ul>\r\n\r\n                <button onClick={onToggleMenu} className={isToggleCollapsed ? style.btn_toggler : style.btn_collapse}>\r\n                    <span/>\r\n                    <span/>\r\n                    <span/>\r\n                </button>\r\n\r\n            </div>\r\n\r\n\r\n            <ul className={style.vertical_navbar} style={!isToggleCollapsed ? {\r\n                'visibility': 'visible',\r\n                'opacity': '1',\r\n                'zIndex': 1001\r\n            } : {'visibility': 'hidden', 'opacity': '0'}}>\r\n                <li>\r\n                    <NavLink activeClassName={style.active_link} className={style.link} to={'/home'}>Home</NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink activeClassName={style.active_link} className={style.link}\r\n                             to={'/profile'}>Profile</NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink activeClassName={style.active_link} className={style.link}\r\n                             to={'/packs'}>Packs</NavLink>\r\n                </li>\r\n\r\n\r\n                {\r\n                    isAuth ? '' :\r\n                        <li>\r\n                            <NavLink activeClassName={style.active_link} className={style.link}\r\n                                     to={'/password_restore'}>Restore</NavLink>\r\n                        </li>\r\n                }\r\n\r\n\r\n\r\n                {\r\n                    isAuth ? '' :\r\n                        <li>\r\n                            <NavLink activeClassName={style.active_link} className={style.link}\r\n                                     to={'/register'}>Register</NavLink>\r\n                        </li>\r\n                }\r\n\r\n                {\r\n                    isAuth ?\r\n                        <li>\r\n                            <NavLink\r\n                                onClick={logout}\r\n                                className={style.logout + ' ' + style.link}\r\n                                to={'#'}>Log\r\n                                Out</NavLink>\r\n                        </li>\r\n                        :\r\n                        <li>\r\n                            <NavLink activeClassName={style.active_link} className={style.link} to={'/login'}>Log\r\n                                In</NavLink>\r\n                        </li>\r\n                }\r\n\r\n\r\n            </ul>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport style from './Home.module.scss'\r\nimport Particles from 'react-particles-js';\r\n\r\n\r\n// const particlesOptions = {\r\n//     particles: {\r\n//         number: {\r\n//             value: 80,\r\n//             density: {\r\n//                 enable: true,\r\n//                 value_area: 800\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst particlesOptions: any = {\r\n\r\n    \"particles\": {\r\n        \"number\": {\r\n            \"value\": 80,\r\n            \"density\": {\r\n                \"enable\": true,\r\n                \"value_area\": 800\r\n            }\r\n        },\r\n        \"color\": {\r\n            \"value\": \"#ffffff\"\r\n        },\r\n        \"shape\": {\r\n            \"type\": \"circle\",\r\n            \"stroke\": {\r\n                \"width\": 0,\r\n                \"color\": \"#000000\"\r\n            },\r\n            \"polygon\": {\r\n                \"nb_sides\": 5\r\n            },\r\n            \"image\": {\r\n                \"width\": 100,\r\n                \"height\": 100\r\n            }\r\n        },\r\n        \"opacity\": {\r\n            \"value\": 0.5,\r\n            \"random\": false,\r\n            \"anim\": {\r\n                \"enable\": false,\r\n                \"speed\": 1,\r\n                \"opacity_min\": 0.1,\r\n                \"sync\": false\r\n            }\r\n        },\r\n        \"size\": {\r\n            \"value\": 5,\r\n            \"random\": true,\r\n            \"anim\": {\r\n                \"enable\": false,\r\n                \"speed\": 40,\r\n                \"size_min\": 0.1,\r\n                \"sync\": false\r\n            }\r\n        },\r\n        \"line_linked\": {\r\n            \"enable\": true,\r\n            \"distance\": 150,\r\n            \"color\": \"#ffffff\",\r\n            \"opacity\": 0.4,\r\n            \"width\": 1\r\n        },\r\n        \"move\": {\r\n            \"enable\": true,\r\n            \"speed\": 6,\r\n            \"direction\": \"none\",\r\n            \"random\": false,\r\n            \"straight\": false,\r\n            \"out_mode\": \"out\",\r\n            \"attract\": {\r\n                \"enable\": false,\r\n                \"rotateX\": 600,\r\n                \"rotateY\": 1200\r\n            }\r\n        }\r\n    },\r\n    \"interactivity\": {\r\n        \"detect_on\": \"canvas\",\r\n        \"events\": {\r\n            \"onhover\": {\r\n                \"enable\": true,\r\n                \"mode\": \"repulse\"\r\n            },\r\n            \"onclick\": {\r\n                \"enable\": true,\r\n                \"mode\": \"push\"\r\n            },\r\n            \"resize\": true\r\n        },\r\n        \"modes\": {\r\n            \"grab\": {\r\n                \"distance\": 400,\r\n                \"line_linked\": {\r\n                    \"opacity\": 1\r\n                }\r\n            },\r\n            \"bubble\": {\r\n                \"distance\": 400,\r\n                \"size\": 40,\r\n                \"duration\": 2,\r\n                \"opacity\": 8,\r\n                \"speed\": 3\r\n            },\r\n            \"repulse\": {\r\n                \"distance\": 200\r\n            },\r\n            \"push\": {\r\n                \"particles_nb\": 4\r\n            },\r\n            \"remove\": {\r\n                \"particles_nb\": 2\r\n            }\r\n        }\r\n    },\r\n    \"retina_detect\": true,\r\n    \"config_demo\": {\r\n        \"hide_card\": false,\r\n        \"background_color\": \"#b61924\",\r\n        \"background_image\": \"\",\r\n        \"background_position\": \"50% 50%\",\r\n        \"background_repeat\": \"no-repeat\",\r\n        \"background_size\": \"cover\"\r\n    }\r\n}\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className={style.home}>\r\n            <Particles className={style.particles} params={particlesOptions}/>\r\n            <div className={style.title_wrapper}>\r\n                <h1>Alexey <br/>Gorbachevskiy</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootType} from \"../../bll/state/store\";\r\n\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n\r\n    function RedirectComponent(props: any) {\r\n        const isAuth = useSelector<AppRootType, boolean>(state => state.auth.isAuth);\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n        return <Component {...props}/>\r\n\r\n    }\r\n\r\n\r\n    return RedirectComponent\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../../dal/API\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    name: '',\r\n    avatar: '',\r\n}\r\n\r\n\r\ntype ActionTypes = SetProfileInfoACType\r\n\r\nexport const profileReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SAVE_PROFILE_INFO: {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                avatar: action.avatar,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SAVE_PROFILE_INFO = 'SAVE_PROFILE_INFO'\r\n\r\nexport type SetProfileInfoACType = {\r\n    type: typeof SAVE_PROFILE_INFO,\r\n    name: string,\r\n    avatar:string\r\n}\r\n\r\nexport const saveProfileInfoAC = (name: string, avatar:string): SetProfileInfoACType => {\r\n    return {type: 'SAVE_PROFILE_INFO', name, avatar}\r\n}\r\n\r\nexport const changeInfoThunkCreator = (name:string, avatar:string) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            profileAPI.changeInfo(name, avatar)\r\n                .then((res) => {\r\n                    saveProfileInfoAC(res.data.name,res.data.avatar)\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    // const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n\r\n                    console.log('Error', e)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport obj from \"./Preloader.module.css\";\r\n\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <>\r\n            <img className={obj.preloader} src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader;\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport style from './Profile.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootType} from \"../../../bll/state/store\";\r\nimport {withAuthRedirect} from \"../../../utilities/hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {setIsCurrentPageProfileAC} from \"../../../bll/state/appReducer\";\r\nimport {changeInfoThunkCreator} from \"../../../bll/state/profileReducer\";\r\nimport obj from \"../../common/preloader/Preloader.module.css\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\n\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    let loginData = useSelector<AppRootType, any>(state => state.login);\r\n    let isAuth = useSelector<AppRootType, boolean>(state => state.auth.isAuth);\r\n    let loginName = useSelector<AppRootType, string>(state => state.login.name);\r\n    let loginAvatar = useSelector<AppRootType, string>(state => state.login.avatar);\r\n    let loginEmail = useSelector<AppRootType, string>(state => state.login.email);\r\n    const [name, setName] = useState<string>(loginName);\r\n    const [avatar, setAvatar] = useState<string>(loginAvatar);\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n\r\n    const onChangeNameInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const onChangeAvatarInput=(e: ChangeEvent<HTMLInputElement>)=>{\r\n        setAvatar(e.currentTarget.value)\r\n    }\r\n    const [isChangeBtnClicked, setIsChangeBtnClicked] = useState(false);\r\n    const changeInfo = () => {\r\n        setIsChangeBtnClicked(true);\r\n    }\r\n    const saveInfo = () => {\r\n        dispatch(changeInfoThunkCreator(name,avatar))\r\n        setIsChangeBtnClicked(false);\r\n    }\r\n\r\n\r\n\r\n    // for header background\r\n    useEffect(() => {\r\n        dispatch(setIsCurrentPageProfileAC(true))\r\n\r\n        return () => {\r\n            dispatch(setIsCurrentPageProfileAC(false))\r\n        }\r\n    }, [])\r\n\r\n\r\n    if (isLoading) {\r\n        return <div className=\"App\" style={{display:'flex', justifyContent:'center',alignItems:'center'}}>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={style.profile}>\r\n\r\n            {\r\n                isAuth ?\r\n                    <>\r\n                        <div className={style.profile_info}>\r\n                            <div className={style.profile_info_header}>\r\n                                {/*<img src={`${loginData.avatar}`} alt=\"Avatar\"/>*/}\r\n                                <img className={style.avatar} src={ `${avatar ? avatar : process.env.PUBLIC_URL+'/favicon.ico'}`}\r\n                                     alt=\"Avatar\"/>\r\n\r\n                                <div className={style.profile_info_header_content}>\r\n                                    {\r\n                                        isLoading ?\r\n                                            <img style={{position:'absolute'}} className={obj.preloader} src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n                                            : ''\r\n                                    }\r\n                                    {\r\n                                        isChangeBtnClicked ?\r\n                                            <>\r\n                                            <div>Name:\r\n                                                <input onChange={onChangeNameInput} value={name}/>\r\n                                            </div>\r\n                                                <div>Avatar:\r\n                                                    <input onChange={onChangeAvatarInput} value={avatar}/>\r\n                                                </div>\r\n\r\n                                            </>\r\n                                            :\r\n                                            <div>Name: <span>{name}</span></div>\r\n                                    }\r\n                                    <div>Email: <span>{loginEmail}</span></div>\r\n\r\n                                    {\r\n                                        isChangeBtnClicked ?\r\n                                            <button onClick={saveInfo}\r\n                                                    className={style.profile_info_save_btn}>Save\r\n                                            </button>\r\n                                            :\r\n                                            <button onClick={changeInfo}\r\n                                                    className={style.profile_info_change_btn}>Change\r\n                                            </button>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div className={style.extra_info}>\r\n                                <p>Card Packs Count: {loginData.publicCardPacksCount}</p>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className={style.profile_settings}>\r\n                            <h2>Profile Settings</h2>\r\n\r\n                            <p>Id: {loginData._id}</p>\r\n                            <p>Created: {loginData.created}</p>\r\n                            <p>Updated: {loginData.updated}</p>\r\n                            <p>Is Admin: {loginData.isAdmin ? 'Yes' : 'No'} </p>\r\n                            <p>Is Verified: {loginData.verified ? 'Yes' : 'No'} </p>\r\n                            <p>Is Remembered: {loginData.rememberMe ? 'Yes' : 'No'} </p>\r\n                        </div>\r\n                    </>\r\n                    : ''\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(Profile)\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\r\nimport style from './Input.module.scss'\r\n\r\n// type InputPropsType={\r\n//     placeholder?: string\r\n//     value?:string\r\n//     onChange?:()=>void\r\n// }\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { onEnter?: () => void };\r\n\r\n\r\nconst Input = (propsI: InputPropsType) => {\r\n\r\n    const {onEnter, ...props} = propsI;\r\n\r\n    const onEnterCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            onEnter && onEnter();\r\n        }\r\n    }\r\n    return (\r\n            <input\r\n                onKeyPress={onEnterCallback}\r\n                className={style.input}\r\n                type={'text'}\r\n                {...propsI}\r\n            />\r\n    );\r\n}\r\n\r\n\r\nexport default Input;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport style from './Checkbox.module.scss'\r\n\r\n\r\ntype CheckboxPropsType =\r\n    DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { labelText?: string };\r\n\r\n\r\nconst Checkbox = (props: CheckboxPropsType) => {\r\n\r\n    return (\r\n        <label className={style.label}>\r\n            <input\r\n                className={style.checkbox}\r\n                type={'checkbox'}\r\n                {...props}\r\n            />\r\n            <span> {props.labelText}</span>\r\n        </label>\r\n    );\r\n}\r\n\r\n\r\nexport default Checkbox;\r\n","import React, {DetailedHTMLProps, HTMLAttributes} from 'react';\r\nimport style from './Button.module.scss'\r\n\r\n\r\n//\r\n// type ButtonPropsType = {\r\n//     children: string\r\n//     onClick?: () => void\r\n// }\r\n\r\ntype ButtonPropsType=DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n\r\n    return (\r\n        <div className={style.container} {...props}>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Button;\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './Login.module.scss'\r\nimport Input from \"../../common/input/Input\";\r\nimport Checkbox from \"../../common/checkbox/Checkbox\";\r\nimport Button from \"../../common/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginThunkCreator, setLoginErrorAC} from \"../../../bll/state/loginReducer\";\r\nimport {AppRootType} from \"../../../bll/state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport obj from \"../../common/preloader/Preloader.module.css\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [remember, setRemember] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const stateError = useSelector<AppRootType, string>(state => state.login.error)\r\n    // const stateEmail = useSelector<AppRootType, string>(state => state.login.email)\r\n    const isAuth = useSelector<AppRootType, boolean>(state => state.auth.isAuth);\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n    const registerStatus = useSelector<AppRootType, number>(state => state.register.status)\r\n    const newPasswordMessage = useSelector<AppRootType, string>(state => state.newPassword.mewPasswordMessage)\r\n    const newPasswordError = useSelector<AppRootType, string>(state => state.newPassword.newPasswordError)\r\n\r\n    const onLogin = () => {\r\n        if (email.trim() === '' || password.trim() === '') {\r\n            dispatch(setLoginErrorAC('All fields should be filled'))\r\n        } else {\r\n            dispatch(setLoginErrorAC(''))\r\n            dispatch(loginThunkCreator(email, password, remember));\r\n        }\r\n    }\r\n\r\n    const [errorStyle, setErrorStyle] = useState({})\r\n\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            setEmail('');\r\n            setPassword('');\r\n            setRemember(false);\r\n            dispatch(setLoginErrorAC(''))\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (stateError) {\r\n            setErrorStyle({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n        } else {\r\n            setErrorStyle({})\r\n        }\r\n\r\n    }, [stateError])\r\n\r\n    // if (isLoading) {\r\n    //     return (\r\n    //         <div className=\"App\" style={{display:'flex', justifyContent:'center',alignItems:'center'}}>\r\n    //             <Preloader/>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to=\"/profile\"/>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.login}>\r\n\r\n            <div className={style.login_form}>\r\n                <h2>Log In</h2>\r\n\r\n                {\r\n                    registerStatus === 201 ?\r\n                        <p style={{color: 'green', fontSize: '18px', textAlign: 'center', maxWidth: '70%'}}>You are\r\n                            successfully\r\n                            registered. Now\r\n                            you need to login.</p> : ''\r\n                }\r\n                {\r\n                    newPasswordMessage && !newPasswordError ?\r\n                        <p style={{color: 'green', fontSize: '18px', textAlign: 'center', maxWidth: '70%'}}>\r\n                            Password was successfully changed. You need to log in now</p>\r\n                        : ''\r\n                }\r\n\r\n                <div className={style.credentials}>\r\n                    <p>Email: \"nya-admin@nya.nya\" </p>\r\n\r\n                    <p> Password: \"1qazxcvBG\"</p>\r\n                </div>\r\n\r\n                <div className={style.form}>\r\n                    <Input style={errorStyle} onChange={(e) => {\r\n                        setEmail(e.currentTarget.value)\r\n                    }}\r\n                           value={email}\r\n                           className={style.input + ' ' + style.email}\r\n                           placeholder={'Email'}\r\n                    />\r\n                    <Input style={errorStyle} onChange={(e) => {\r\n                        setPassword(e.currentTarget.value)\r\n                    }}\r\n                           value={password}\r\n                           className={style.input + ' ' + style.password}\r\n                           placeholder={'Password'}\r\n                           type={'password'}\r\n                    />\r\n                    <label>\r\n                        <Checkbox\r\n                            style={errorStyle}\r\n                            checked={remember}\r\n                            onChange={(e) => {\r\n                                setRemember(!remember)\r\n                            }}/> Remember Me?\r\n                    </label>\r\n                </div>\r\n                <p className={style.error}>{stateError}</p>\r\n\r\n                <Button onClick={onLogin} style={{width: '150px'}}>Log In</Button>\r\n\r\n\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                <img style={{position: 'absolute', zIndex: 1200}} className={obj.preloader}\r\n                     src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './Register.module.scss'\r\nimport Input from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerThunkCreator} from \"../../../bll/state/registerReducer\";\r\nimport {AppRootType} from \"../../../bll/state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport obj from \"../../common/preloader/Preloader.module.css\";\r\n\r\n\r\nconst Register = () => {\r\n    const registerError = useSelector<AppRootType, string>(state => state.register.registerError)\r\n    const registerStatus = useSelector<AppRootType, number>(state => state.register.status)\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n    const dispatch = useDispatch();\r\n    const [errorStyle1, setErrorStyle1] = useState({})\r\n    const [errorStyle2, setErrorStyle2] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (registerError) {\r\n            setErrorStyle1({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n            setErrorStyle2({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n        } else {\r\n            setErrorStyle1({})\r\n            setErrorStyle2({})\r\n        }\r\n\r\n    }, [registerError])\r\n\r\n\r\n    const formik = useFormik({\r\n\r\n\r\n        validate: (values) => {\r\n            if (!values.email) {\r\n                setErrorStyle1({\r\n                    borderColor: '#cf0c0c',\r\n                })\r\n                return {\r\n                    email: 'Email is required'\r\n                }\r\n            }\r\n            else{\r\n                setErrorStyle1({})\r\n            }\r\n\r\n            if (!values.password) {\r\n                setErrorStyle2({\r\n                    borderColor: '#cf0c0c',\r\n                })\r\n                return {\r\n                    password: 'Password is required'\r\n                }\r\n            }\r\n            else{\r\n                setErrorStyle2({})\r\n            }\r\n\r\n\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(registerThunkCreator(values))\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (registerStatus === 201) {\r\n            formik.resetForm();\r\n        }\r\n    }, [registerStatus, registerError])\r\n\r\n    if (registerStatus === 201) {\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n\r\n    return (\r\n        <div className={style.register}>\r\n            <div className={style.register_form}>\r\n                <h2>Registration</h2>\r\n\r\n\r\n                <div className={style.form}>\r\n                    <Input\r\n                        style={errorStyle1}\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.email}\r\n                        className={style.input + ' ' + style.email}\r\n                        placeholder={'Email'}\r\n\r\n                    />\r\n                    {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div> : null}\r\n                    <Input\r\n                        style={errorStyle2}\r\n                        className={style.input + ' ' + style.password}\r\n                        placeholder={'Password'}\r\n                        type={'password'}\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.password}\r\n                    />\r\n                    {formik.errors.password ? <div style={{color:'red'}}>{formik.errors.password}</div> : null}\r\n                </div>\r\n\r\n\r\n                {registerError ? <div style={{color:'red'}}>{registerError}</div>  : ''}\r\n\r\n                <Button onClick={() => formik.handleSubmit()} style={{width: '150px'}}>Register</Button>\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                <img style={{position: 'absolute', zIndex: 1200}} className={obj.preloader}\r\n                     src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport style from './Settings.module.scss'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Settings=()=>{\r\n\r\n\r\n    return <Redirect to=\"/password_restore\"/>;\r\n\r\n    return (\r\n        <div className={style.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './NewPassword.module.scss'\r\nimport Input from \"../../../common/input/Input\";\r\nimport Button from \"../../../common/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {setNewPasswordErrorAC, setNewPasswordThunkCreator} from \"../../../../bll/state/newPasswordReducer\";\r\nimport {AppRootType} from \"../../../../bll/state/store\";\r\nimport obj from \"../../../common/preloader/Preloader.module.css\";\r\n\r\n\r\nconst NewPassword = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState('');\r\n    let newPasswordError = useSelector<AppRootType, string>(state => state.newPassword.newPasswordError);\r\n    let successMessage = useSelector<AppRootType, string>(state => state.newPassword.mewPasswordMessage);\r\n    const [errorStyle, setErrorStyle] = useState({})\r\n\r\n    const {token} = useParams();\r\n    const sendLinkToEmail = () => {\r\n        if(password.trim()===''){\r\n            setErrorStyle({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n            dispatch(setNewPasswordErrorAC('All fields should be filled'))\r\n        }\r\n        else{\r\n            dispatch(setNewPasswordThunkCreator(password,token));\r\n            setPassword('');\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!newPasswordError && successMessage){\r\n            setPassword('');\r\n        }\r\n        if(!newPasswordError){\r\n            setErrorStyle({})\r\n        }\r\n        else{\r\n            setErrorStyle({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n        }\r\n    },[newPasswordError,successMessage])\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setNewPasswordErrorAC(''))\r\n        }\r\n    },[])\r\n\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n    // if (isLoading) {\r\n    //     return (\r\n    //         <div className=\"App\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n    //             <Preloader/>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    if(successMessage && !newPasswordError){\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n\r\n    return (\r\n        <div className={style.new_password}>\r\n            <div className={style.new_password_form}>\r\n                <h2>New Password</h2>\r\n\r\n\r\n                <div className={style.form}>\r\n                    <Input style={errorStyle} onChange={(e) => {\r\n                        setPassword(e.currentTarget.value)\r\n                    }}\r\n                           type={'password'}\r\n                           value={password}\r\n                           className={style.input + ' ' + style.password}\r\n                           placeholder={'Type new password'}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    newPasswordError && <p className={style.error}>{newPasswordError}</p>\r\n                }\r\n                {\r\n                    successMessage && <p className={style.successMessage}>{successMessage}</p>\r\n                }\r\n\r\n\r\n                <Button onClick={sendLinkToEmail} style={{width: '150px'}}>Save</Button>\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                <img style={{position: 'absolute', zIndex: 1200}} className={obj.preloader}\r\n                     src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import {Dispatch} from \"redux\";\r\nimport {settingsAPI} from \"../../dal/API\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState= {\r\n    passwordRestoreError:'',\r\n    passwordRestoreSuccessMessage:'',\r\n}\r\n\r\n\r\n\r\n\r\ntype ActionTypes = setSettingsErrorACType | setSettingsSuccessMessageACType\r\n\r\nexport const passwordRestoreReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType=> {\r\n    switch (action.type) {\r\n\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                passwordRestoreError:action.passwordRestoreError\r\n            }\r\n        }\r\n        case SET_SUCCESS_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                passwordRestoreSuccessMessage:action.passwordRestoreSuccessMessage\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_ERROR='SET_ERROR'\r\nconst SET_SUCCESS_MESSAGE='SET_SUCCESS_MESSAGE'\r\n\r\nexport type setSettingsErrorACType = {\r\n    type: typeof SET_ERROR,\r\n    passwordRestoreError: string\r\n}\r\nexport type setSettingsSuccessMessageACType = {\r\n    type: typeof SET_SUCCESS_MESSAGE,\r\n    passwordRestoreSuccessMessage: string\r\n}\r\n\r\nexport const setSettingsErrorAC = (passwordRestoreError: string): setSettingsErrorACType => {\r\n    return {type: 'SET_ERROR', passwordRestoreError}\r\n}\r\nexport const setSettingsSuccessMessageAC = (passwordRestoreSuccessMessage: string): setSettingsSuccessMessageACType => {\r\n    return {type: 'SET_SUCCESS_MESSAGE', passwordRestoreSuccessMessage}\r\n}\r\n\r\n\r\nexport const restorePasswordThunkCreator = (email: string) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            settingsAPI.restore(email)\r\n                .then((res) => {\r\n                    // console.log(res)\r\n                    dispatch(setSettingsSuccessMessageAC(res.data.info))\r\n                    dispatch(setSettingsErrorAC(''))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    dispatch(setSettingsErrorAC(error))\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './PasswordRestore.module.scss'\r\nimport Input from \"../../../common/input/Input\";\r\nimport Button from \"../../../common/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    restorePasswordThunkCreator,\r\n    setSettingsErrorAC,\r\n    setSettingsSuccessMessageAC\r\n} from \"../../../../bll/state/passwordRestoreReducer\";\r\nimport {AppRootType} from \"../../../../bll/state/store\";\r\nimport obj from \"../../../common/preloader/Preloader.module.css\";\r\n\r\n\r\nconst PasswordRestore = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    let passwordRestoreError = useSelector<AppRootType, string>(state => state.passwordRestore.passwordRestoreError);\r\n    let successMessage = useSelector<AppRootType, string>(state => state.passwordRestore.passwordRestoreSuccessMessage);\r\n    const [errorStyle, setErrorStyle] = useState({})\r\n    const sendLinkToEmail = () => {\r\n\r\n        if(email.trim()===''){\r\n            dispatch(setSettingsErrorAC('All fields should be filled'))\r\n        }\r\n        else{\r\n            dispatch(setSettingsErrorAC(''))\r\n            dispatch(restorePasswordThunkCreator(email));\r\n            setTimeout(() => {\r\n                dispatch(setSettingsSuccessMessageAC(''))\r\n                successMessage = '';\r\n            }, 4000)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!passwordRestoreError && successMessage){\r\n            setEmail('');\r\n        }\r\n        if(!passwordRestoreError){\r\n            setErrorStyle({})\r\n        }\r\n        else{\r\n            setErrorStyle({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n        }\r\n    },[passwordRestoreError,successMessage])\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setSettingsErrorAC(''))\r\n            setEmail('');\r\n        }\r\n    },[])\r\n\r\n\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n\r\n\r\n    // if (isLoading) {\r\n    //     return (\r\n    //         <div className=\"App\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n    //             <Preloader/>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n        <div className={style.password_restore}>\r\n            <div className={style.password_restore_form}>\r\n                <h2>Restore Password</h2>\r\n\r\n\r\n                <div className={style.form}>\r\n                    <Input style={errorStyle} onChange={(e) => {\r\n                        setEmail(e.currentTarget.value)\r\n                    }}\r\n                           value={email}\r\n                           className={style.input + ' ' + style.email}\r\n                           placeholder={'Type your email'}\r\n                    />\r\n                </div>\r\n                {\r\n                    passwordRestoreError && <p className={style.error}>{passwordRestoreError}</p>\r\n                }\r\n                {\r\n                    successMessage && <p className={style.successMessage}>{successMessage}</p>\r\n                }\r\n\r\n\r\n                <Button onClick={sendLinkToEmail} style={{width: '150px'}}>Send</Button>\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                <img style={{position: 'absolute', zIndex: 1200}} className={obj.preloader}\r\n                     src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordRestore\r\n","import React from 'react';\r\nimport style from './Features.module.scss'\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../utilities/hoc/withAuthRedirect\";\r\n\r\n\r\nconst Features = () => {\r\n\r\n\r\n    return (\r\n        <div className={style.features}>\r\n            Features\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(Features)\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './Feature0.module.scss'\r\nimport Button from \"../../main/ui/common/button/Button\";\r\nimport Input from \"../../main/ui/common/input/Input\";\r\nimport Checkbox from \"../../main/ui/common/checkbox/Checkbox\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../main/utilities/hoc/withAuthRedirect\";\r\n\r\nconst Feature0 = () => {\r\n\r\n\r\n    const [checkboxValue, setCheckboxValue] = useState(false);\r\n    const onCheckboxClick = () => {\r\n        setCheckboxValue(!checkboxValue);\r\n    }\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.feature0}>\r\n            <h2>\r\n                Common Components\r\n            </h2>\r\n\r\n            <div className={style.common}>\r\n                <div className={style.checkbox_wrapper}>\r\n                    <Checkbox onChange={onCheckboxClick} checked={checkboxValue} labelText={'Hello'}/>\r\n                </div>\r\n\r\n                <div className={style.input_wrapper}>\r\n                    <Input onChange={onInputChange} value={inputValue} placeholder={'Hi there'}/>\r\n                </div>\r\n\r\n                <div className={style.btn_wrapper}>\r\n                    <Button>Hi all</Button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(Feature0)\r\n","import {Dispatch} from \"redux\";\r\nimport {AuthDataACResponseType} from \"./authReducer\";\r\nimport {packsAPI} from \"../../dal/API\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n\r\n    currentMinCardsCount: 0,\r\n    currentMaxCardsCount: 26,\r\n\r\n    preflightTotalCount: null as number | null,\r\n\r\n    packsData: {\r\n        cardPacks: [] as Array<CardPacksItemType>,\r\n        cardPacksTotalCount: null as number | null,\r\n        maxCardsCount: null as number | null,\r\n        minCardsCount: null as number | null,\r\n        page: null as number | null,\r\n        pageCount: null as number | null,\r\n        token: '',\r\n        tokenDeathTime: null as number | null,\r\n    },\r\n    packsError: '',\r\n\r\n}\r\n\r\n\r\ntype ActionTypes = SetPacksErrorACType | SetPacksDataACType | SetPacksTotalCountACType | SetMinMaxCardsCountsACType\r\n\r\nexport const packsReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SET_PACKS_DATA: {\r\n            return {\r\n                ...state,\r\n                packsData: {\r\n                    cardPacks: [...action.packsData.cardPacks.map(el => ({...el}))],\r\n                    cardPacksTotalCount: action.packsData.cardPacksTotalCount,\r\n                    maxCardsCount: action.packsData.maxCardsCount,\r\n                    minCardsCount: action.packsData.minCardsCount,\r\n                    page: action.packsData.page,\r\n                    pageCount: action.packsData.pageCount,\r\n                    token: action.packsData.token,\r\n                    tokenDeathTime: action.packsData.tokenDeathTime,\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                packsError: action.packsError\r\n            }\r\n        }\r\n\r\n        case SET_MIN_MAX_CARDS_COUNT: {\r\n            return {\r\n                ...state,\r\n                currentMinCardsCount: action.currentMinCardsCount,\r\n                currentMaxCardsCount: action.currentMaxCardsCount,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_PACKS_DATA = 'SET_PACKS_DATA'\r\nconst SET_PACKS_TOTAL_COUNT = 'SET_PACKS_TOTAL_COUNT'\r\nconst SET_MIN_MAX_CARDS_COUNT = 'SET_MIN_MAX_CARDS_COUNT'\r\n\r\n\r\nexport type CardPacksItemType = {\r\n    cardsCount: number\r\n    created: string\r\n    deckCover: any\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    _v: number\r\n    _id: string\r\n\r\n}\r\n\r\nexport type PacksDataType = {\r\n    cardPacks: Array<CardPacksItemType>\r\n    cardPacksTotalCount: number | null\r\n    maxCardsCount: number | null\r\n    minCardsCount: number | null\r\n    page: number | null\r\n    pageCount: number | null\r\n    token: string\r\n    tokenDeathTime: number | null\r\n}\r\n\r\nexport type SetPacksErrorACType = {\r\n    type: typeof SET_ERROR,\r\n    packsError: string\r\n}\r\n\r\nexport type SetPacksDataACType = {\r\n    type: typeof SET_PACKS_DATA,\r\n    packsData: PacksDataType\r\n}\r\nexport type SetPacksTotalCountACType = {\r\n    type: typeof SET_PACKS_TOTAL_COUNT,\r\n    packsTotalCount: number\r\n}\r\n\r\nexport type SetMinMaxCardsCountsACType = {\r\n    type: typeof SET_MIN_MAX_CARDS_COUNT,\r\n    currentMinCardsCount: number,\r\n    currentMaxCardsCount: number,\r\n}\r\n\r\n\r\nexport const setMinMaxCardsCountsAC = (currentMinCardsCount: number, currentMaxCardsCount: number): SetMinMaxCardsCountsACType => {\r\n    return {type: 'SET_MIN_MAX_CARDS_COUNT', currentMinCardsCount, currentMaxCardsCount}\r\n}\r\n\r\nexport const setPacksErrorAC = (packsError: string): SetPacksErrorACType => {\r\n    return {type: 'SET_ERROR', packsError}\r\n}\r\n\r\nexport const setPacksDataAC = (packsData: PacksDataType): SetPacksDataACType => {\r\n    return {type: 'SET_PACKS_DATA', packsData}\r\n}\r\n\r\n\r\nexport const getPacksThunkCreator = (min: number, max: number, page: number, pageSize: number) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | AuthDataACResponseType | SetLoadingACType | SetPacksErrorACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            packsAPI.getPacks(min, max, page, pageSize)\r\n                .then((res) => {\r\n                    console.log(res)\r\n\r\n                    dispatch(setPacksDataAC(res.data))\r\n                    dispatch(setMinMaxCardsCountsAC(min, max))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    console.log('Error', error)\r\n\r\n                    setPacksErrorAC(error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nexport const postNewPackThunkCreator = (min: number, max: number, packName: string, privatePack: boolean, page: number, pageSize: number) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType | any>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            packsAPI.postPack(packName, privatePack)\r\n                .then((res) => {\r\n                    console.log(res)\r\n\r\n                    dispatch(getPacksThunkCreator(min, max, page, pageSize))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const updatePackThunkCreator = (min: number, max: number, packId: string, packName: string, page: number, pageSize: number) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType | any>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            packsAPI.updatePack(packId, packName)\r\n                .then((res) => {\r\n                    console.log(res)\r\n\r\n                    dispatch(getPacksThunkCreator(min, max, page, pageSize))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const deletePackThunkCreator = (min: number, max: number, packId: string, page: number, pageSize: number) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType | any>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            packsAPI.deletePack(packId)\r\n                .then((res) => {\r\n                    console.log(res)\r\n\r\n                    dispatch(getPacksThunkCreator(min, max, page, pageSize))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const searchForPackName = (packName: string, myAccountId: string,min: number, max: number, page: number, pageSize: number) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | AuthDataACResponseType | SetLoadingACType | SetPacksErrorACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            packsAPI.searchForPackName(packName,myAccountId,min, max, page, pageSize)\r\n                .then((res) => {\r\n                    console.log(res)\r\n\r\n                    dispatch(setPacksDataAC(res.data))\r\n                    dispatch(setMinMaxCardsCountsAC(min, max))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    console.log('Error', error)\r\n\r\n                    setPacksErrorAC(error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react';\r\nimport style from './Packs.module.scss'\r\nimport {Button, Checkbox, Form, Input, Modal, Popconfirm, Slider, Space, Table} from \"antd\";\r\nimport 'antd/dist/antd.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    deletePackThunkCreator,\r\n    getPacksThunkCreator,\r\n    PacksDataType,\r\n    postNewPackThunkCreator, searchForPackName,\r\n    updatePackThunkCreator\r\n} from \"../../../bll/state/packsReducer\";\r\nimport {withAuthRedirect} from \"../../../utilities/hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppRootType} from \"../../../bll/state/store\";\r\nimport {CheckboxChangeEvent} from \"antd/es/checkbox\";\r\nimport Search from \"antd/es/input/Search\";\r\n\r\n\r\nconst Packs = () => {\r\n\r\n    const page = useSelector<AppRootType, number | null>(state => state.packs.packsData.page);\r\n    const currentPage = Number(page);\r\n\r\n    const pageCount = useSelector<AppRootType, number | null>(state => state.packs.packsData.pageCount);\r\n    const pageSize = Number(pageCount);\r\n\r\n\r\n    const currentMinCardsCount = useSelector<AppRootType, number>(state => state.packs.currentMinCardsCount);\r\n    const currentMaxCardsCount = useSelector<AppRootType, number>(state => state.packs.currentMaxCardsCount);\r\n    const myAccountId = useSelector<AppRootType, string>(state => state.login._id);\r\n\r\n\r\n    const [form] = Form.useForm();\r\n    const [editingKey, setEditingKey] = useState('');\r\n    const isEditing = (record: Item) => record.key === editingKey;\r\n    const columns = [\r\n        {\r\n            title: 'Id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            align: 'center' as 'center',\r\n            width: '7%'\r\n        },\r\n        {\r\n            title: 'Pack name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            editable: true,\r\n            align: 'center' as 'center',\r\n        },\r\n        {\r\n            title: 'Cards count',\r\n            dataIndex: 'cardsCount',\r\n            key: 'cardsCount',\r\n            align: 'center' as 'center',\r\n        },\r\n        {\r\n            title: 'Created',\r\n            dataIndex: 'created',\r\n            key: 'created',\r\n            align: 'center' as 'center',\r\n        },\r\n        {\r\n            title: 'Updated',\r\n            dataIndex: 'updated',\r\n            key: 'updated',\r\n            align: 'center' as 'center',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            align: 'center' as 'center',\r\n            render: (_: any, record: Item) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <Space size=\"middle\">\r\n                        <span>\r\n                            {/*href=\"javascript:;\"*/}\r\n                            <a\r\n                                onClick={() => savePack(record.key)} style={{marginRight: 8}}>Save</a>\r\n                            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                                <a>Cancel</a>\r\n                            </Popconfirm>\r\n                        </span>\r\n                    </Space>\r\n                ) : (\r\n                    <Space size=\"middle\">\r\n                        {/*disabled={editingKey !== ''} */}\r\n                        <a onClick={() => editPack(record)}>\r\n                            Edit\r\n                        </a>\r\n                        <a onClick={() => deletePack(record)}>Delete</a>\r\n                    </Space>\r\n                );\r\n\r\n\r\n            },\r\n        },\r\n        {\r\n            title: 'Cards',\r\n            key: 'cards',\r\n            align: 'center' as 'center',\r\n            render: (text: any, record: any) => (\r\n                <Space size=\"middle\">\r\n                    <a>Cards</a>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const packsData = useSelector<AppRootType, PacksDataType>(state => state.packs.packsData);\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPacksThunkCreator(0, 26, 1, 50))\r\n    }, []);\r\n\r\n\r\n    let dataSource = packsData.cardPacks.map((el, index) => {\r\n        let id;\r\n        if (packsData.pageCount && packsData.cardPacksTotalCount) {\r\n            if (packsData.page) {\r\n                id = (packsData.page - 1) * packsData.pageCount + 1 + index\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            {\r\n                key: index + 1,\r\n                id: id,\r\n                name: el.name,\r\n                cardsCount: el.cardsCount,\r\n                updated: new Date(el.updated).toLocaleString(),\r\n                created: new Date(el.created).toLocaleString(),\r\n            }\r\n        )\r\n    })\r\n\r\n    const handleAdd = () => {\r\n        showModal()\r\n    };\r\n\r\n    const handleChange = (currentPage: any, pageSize: any) => {\r\n        dispatch(getPacksThunkCreator(currentMinCardsCount, currentMaxCardsCount, Number(currentPage), Number(pageSize)))\r\n    }\r\n\r\n\r\n    // Delete Pack\r\n    const deletePack = (record: Item) => {\r\n        const id = packsData.cardPacks[+record.key - 1]._id\r\n\r\n        dispatch(deletePackThunkCreator(currentMinCardsCount, currentMaxCardsCount, id, currentPage, pageSize))\r\n    }\r\n\r\n    // Edit Pack\r\n    const editPack = (record: Item) => {\r\n        form.setFieldsValue({...record});\r\n        setEditingKey(record.key);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const savePack = async (key: React.Key) => {\r\n        const oldName = packsData.cardPacks[+key - 1].name;\r\n        const newName = dataSource[+key - 1].name;\r\n        const packId = packsData.cardPacks[+key - 1]._id;\r\n\r\n        if (oldName !== newName) {\r\n            dispatch(updatePackThunkCreator(currentMinCardsCount, currentMaxCardsCount, packId, newName, currentPage, pageSize))\r\n        }\r\n        setEditingKey(\"\");\r\n    }\r\n\r\n    // modal\r\n    const [stateVisible, setStateVisible] = useState(false);\r\n    const [modalInputValue, setModalInputValue] = useState('');\r\n    const [modalCheckboxValue, setModalCheckboxChange] = useState(false);\r\n\r\n    const onModalCheckboxChange = (e: CheckboxChangeEvent) => {\r\n        setModalCheckboxChange(e.target.checked)\r\n    }\r\n\r\n    const onModalInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setModalInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    const showModal = () => {\r\n        setStateVisible(true)\r\n    };\r\n\r\n\r\n    // Add new pack\r\n    const handleOk = (e: MouseEvent<HTMLElement>) => {\r\n        dispatch(postNewPackThunkCreator\r\n        (\r\n            currentMinCardsCount,\r\n            currentMaxCardsCount,\r\n            modalInputValue,\r\n            modalCheckboxValue,\r\n            Number(packsData.page),\r\n            Number(packsData.pageCount\r\n            )));\r\n\r\n        setModalInputValue('')\r\n        setStateVisible(false)\r\n        setModalCheckboxChange(false)\r\n    };\r\n\r\n    const handleCancel = (e: MouseEvent<HTMLElement>) => {\r\n        setModalInputValue('')\r\n        setStateVisible(false)\r\n        setModalCheckboxChange(false)\r\n    };\r\n\r\n\r\n    // Antd slider\r\n    function onChange(value: any) {\r\n    }\r\n\r\n    function onAfterChange(value: any) {\r\n        console.log(value)\r\n        dispatch(getPacksThunkCreator(value[0], value[1], currentPage, pageSize))\r\n    }\r\n\r\n    // Antd search\r\n    const [searchInputValue, setSearchInputValue] = useState('')\r\n    const [searchCheckboxValue, setSearchCheckboxValue] = useState(false)\r\n\r\n    const onSearchInputChange = (e: any) => {\r\n        setSearchInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onSearch = () => {\r\n\r\n        let myId = ''\r\n        if (searchCheckboxValue) {\r\n            myId = myAccountId\r\n        }\r\n\r\n        dispatch(searchForPackName(\r\n            searchInputValue,\r\n            myId,\r\n            currentMinCardsCount,\r\n            currentMaxCardsCount,\r\n            currentPage,\r\n            pageSize\r\n            ))\r\n\r\n        setSearchInputValue('')\r\n    }\r\n\r\n    const onSearchCheckboxChange = (e: any) => {\r\n        setSearchCheckboxValue(e.target.checked)\r\n    }\r\n\r\n    const marks = {\r\n        0: {\r\n            style: {\r\n                color: 'white'\r\n            },\r\n            label: 0\r\n        },\r\n        26: {\r\n            style: {\r\n                color: 'white'\r\n            },\r\n            label: 26\r\n        },\r\n    };\r\n\r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        // if(col.key==='action'){\r\n        //    return {\r\n        //        ...col,\r\n        //        onCell:(record:any)=>({\r\n        //            record,\r\n        //            inputType: col.dataIndex === \"cardsCount\" ? \"number\" : \"text\",\r\n        //            dataIndex: col.dataIndex,\r\n        //            title: col.title,\r\n        //            align: 'center' as 'center',\r\n        //        })\r\n        //\r\n        //    }\r\n        // }\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record: any) => ({\r\n                record,\r\n                inputType: col.dataIndex === \"cardsCount\" ? \"number\" : \"text\",\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            })\r\n        };\r\n    });\r\n\r\n\r\n    return (\r\n        <div className={style.packs}>\r\n\r\n            <Modal\r\n                maskClosable={false}\r\n                destroyOnClose={true}\r\n                centered={true}\r\n                title=\"Add a row\"\r\n                visible={stateVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n            >\r\n                <label>Type new Pack name</label>\r\n                <Input value={modalInputValue} onChange={onModalInputChange} style={{marginTop: '5px'}} type=\"text\"/>\r\n\r\n                {/*<label>Private</label> <span> </span>*/}\r\n                <Checkbox style={{marginTop: '5px'}}\r\n                          checked={modalCheckboxValue}\r\n                          onChange={onModalCheckboxChange}\r\n                >\r\n                    {'Private'}\r\n                </Checkbox>\r\n            </Modal>\r\n\r\n\r\n            <div className={style.pack_settings}>\r\n\r\n                <Button\r\n                    onClick={handleAdd}\r\n                    className={style.add_btn}\r\n                    // onClick={handleAdd}\r\n                    type=\"primary\"\r\n                    style={{\r\n                        // marginBottom: 16,\r\n                        marginLeft: 16,\r\n                    }}\r\n                >\r\n                    Add new Pack\r\n                </Button>\r\n\r\n                <div className={style.twice_slider}>\r\n                    <h4>Filter by cards count</h4>\r\n                    <Slider\r\n                        marks={marks}\r\n                        range\r\n                        step={1}\r\n                        min={0}\r\n                        max={26}\r\n                        defaultValue={[0, 26]}\r\n                        onChange={onChange}\r\n                        onAfterChange={onAfterChange}\r\n\r\n                    />\r\n\r\n                </div>\r\n\r\n                <div className={style.search_wrapper}>\r\n                    <Checkbox\r\n                        className={style.search_checkbox}\r\n                        checked={searchCheckboxValue}\r\n                        onChange={onSearchCheckboxChange}\r\n                    >My Packs Only\r\n                    </Checkbox>\r\n                    <Search className={style.search}\r\n                            placeholder=\"Search for Pack Name\"\r\n                            onSearch={onSearch}\r\n                            enterButton\r\n                            size=\"middle\"\r\n                            value={searchInputValue}\r\n                            onChange={onSearchInputChange}\r\n                            // allowClear\r\n                            loading={isLoading}\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <Form form={form} component={false}>\r\n                <Table className={style.table} dataSource={dataSource}\r\n                    // columns={columns}\r\n                       columns={mergedColumns}\r\n\r\n                       components={{\r\n                           body: {\r\n                               cell: EditableCell,\r\n                           },\r\n                       }}\r\n                       bordered\r\n                       rowClassName={style.editableRow}\r\n                       scroll={{x: 1500, y: 400}}\r\n                       loading={isLoading}\r\n                       pagination={{\r\n                           total: packsData.cardPacksTotalCount ? packsData.cardPacksTotalCount : 5,\r\n                           defaultPageSize: 50,\r\n                           showSizeChanger: true,\r\n                           pageSizeOptions: ['1', '5', '10', '50', '100'],\r\n                           onChange: handleChange,\r\n                           // onShowSizeChange: handleSelectSize\r\n                       }}\r\n                />\r\n            </Form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Item {\r\n    key: any;\r\n    id: any,\r\n    name: string;\r\n    cardsCount: number,\r\n    updated: any,\r\n    created: string\r\n}\r\n\r\n\r\ninterface EditableCellProps extends React.HTMLAttributes<HTMLElement> {\r\n    editing: boolean;\r\n    dataIndex: string;\r\n    title: any;\r\n    inputType: 'number' | 'text';\r\n    record: Item;\r\n    index: number;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst EditableCell: React.FC<EditableCellProps> = ({\r\n                                                       editing,\r\n                                                       dataIndex,\r\n                                                       title,\r\n                                                       inputType,\r\n                                                       record,\r\n                                                       index,\r\n                                                       children,\r\n                                                       ...restProps\r\n                                                   }) => {\r\n\r\n    const [editableInputValue, setEditableInputValue] = useState('')\r\n    const onEditableInputChange = (e: any) => {\r\n        setEditableInputValue(e.target.value)\r\n        record.name = e.target.value\r\n    }\r\n    // const inputNode = inputType === 'number' ?\r\n    //     <InputNumber value={0} onChange={onEditableInputChange} /> : <Input value={''} onChange={onEditableInputChange}/>;\r\n\r\n    const inputNode = <Input value={editableInputValue} onChange={onEditableInputChange}/>;\r\n\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{margin: 0}}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                children\r\n            )}\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(Packs)\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from \"./main/ui/header/header\";\r\nimport {Redirect, Route,} from \"react-router-dom\";\r\nimport {AppRootType} from \"./main/bll/state/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Home from \"./main/ui/routes/home/Home\";\r\nimport Profile from \"./main/ui/routes/profile/Profile\";\r\nimport Login from \"./main/ui/routes/login/Login\";\r\nimport Register from \"./main/ui/routes/register/Register\";\r\nimport Settings from \"./main/ui/routes/settings/Settings\";\r\nimport NewPassword from \"./main/ui/routes/settings/newPassword/NewPassword\";\r\nimport PasswordRestore from \"./main/ui/routes/settings/passwordRestore/PasswordRestore\";\r\nimport Features from \"./main/ui/routes/features/Features\";\r\nimport Feature0 from \"./features/f0-test/Feature0\";\r\nimport Preloader from \"./main/ui/common/preloader/Preloader\";\r\nimport {initializeAppThunkCreator} from \"./main/bll/state/appReducer\";\r\nimport Packs from \"./main/ui/routes/packs/Packs\";\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userId = useSelector<AppRootType, string>(state => state.login._id);\r\n    useEffect(() => {\r\n        if(!userId){\r\n            dispatch(initializeAppThunkCreator());\r\n        }\r\n\r\n    }, [])\r\n\r\n    const initialized = useSelector<AppRootType, boolean>(state => state.app.initialized);\r\n    if (!initialized) {\r\n        return(\r\n            <div className=\"App\" style={{display:'flex', justifyContent:'center',alignItems:'center'}}>\r\n                <Preloader/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Route exact path='/' render={() => <Redirect to={'/home'}/>}/>\r\n            <Route path='/home' render={() => <Home/>}/>\r\n            <Route path='/profile' render={() => <Profile/>}/>\r\n            <Route path='/packs' render={() => <Packs/>}/>\r\n            <Route path='/login' render={() => <Login/>}/>\r\n            <Route path='/register' render={() => <Register/>}/>\r\n            <Route path='/settings' render={() => <Settings/>}/>\r\n            <Route path='/new_password/:token' render={() => <NewPassword/>}/>\r\n            <Route path='/password_restore' render={() => <PasswordRestore/>}/>\r\n            <Route path='/features' render={() => <Features/>}/>\r\n            <Route path='/feature0' render={() => <Feature0/>}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {registerReducer} from \"./registerReducer\";\r\nimport {passwordRestoreReducer} from \"./passwordRestoreReducer\";\r\nimport {newPasswordReducer} from \"./newPasswordReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\nimport {packsReducer} from \"./packsReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    passwordRestore: passwordRestoreReducer,\r\n    newPassword: newPasswordReducer,\r\n    profile: profileReducer,\r\n    packs: packsReducer,\r\n})\r\n\r\n\r\nexport type AppRootType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/bll/state/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__30OeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__AetUm\",\"profile_info\":\"Profile_profile_info__1PfUa\",\"profile_info_header\":\"Profile_profile_info_header__2xvY9\",\"avatar\":\"Profile_avatar__1LxdJ\",\"profile_info_header_content\":\"Profile_profile_info_header_content__13Kdz\",\"profile_info_change_btn\":\"Profile_profile_info_change_btn__2sM0D\",\"profile_info_save_btn\":\"Profile_profile_info_save_btn__3iysm\",\"profile_settings\":\"Profile_profile_settings__1LZv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"login\":\"Login_login__1nefd\",\"login_form\":\"Login_login_form__2Hk-O\",\"form\":\"Login_form__2KocX\",\"input\":\"Login_input__2ACDp\",\"email\":\"Login_email__L_6yG\",\"password\":\"Login_password__16r6P\",\"credentials\":\"Login_credentials__1UL_-\",\"error\":\"Login_error__mGFfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packs\":\"Packs_packs__UckBQ\",\"pack_settings\":\"Packs_pack_settings__1DuJO\",\"add_btn\":\"Packs_add_btn__2QFPE\",\"twice_slider\":\"Packs_twice_slider__1Tt87\",\"search_wrapper\":\"Packs_search_wrapper__15H3R\",\"search_checkbox\":\"Packs_search_checkbox__1E_ry\",\"search\":\"Packs_search__37mvi\",\"table\":\"Packs_table__3H4Oe\",\"editableRow\":\"Packs_editableRow__3uMyE\",\"ant-form-item-explain\":\"Packs_ant-form-item-explain__17NnE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"register\":\"Register_register__2a6V8\",\"register_form\":\"Register_register_form__33omE\",\"form\":\"Register_form__38cOF\",\"input\":\"Register_input__akZVV\",\"email\":\"Register_email__WBOhK\",\"password\":\"Register_password__3TH2K\"};"],"sourceRoot":""}