{"version":3,"sources":["main/ui/common/input/Input.module.scss","main/ui/common/button/Button.module.scss","main/ui/routes/settings/Settings.module.scss","main/ui/routes/features/Features.module.scss","main/ui/common/preloader/Preloader.module.css","main/ui/routes/profile/Profile.module.scss","main/ui/routes/login/Login.module.scss","main/ui/header/header.module.scss","main/ui/routes/register/Register.module.scss","main/ui/routes/settings/newPassword/NewPassword.module.scss","main/ui/routes/settings/passwordRestore/PasswordRestore.module.scss","main/dal/API.ts","main/bll/state/appReducer.ts","main/bll/state/authReducer.ts","main/bll/state/registerReducer.ts","main/bll/state/newPasswordReducer.ts","main/bll/state/loginReducer.ts","main/ui/header/header.tsx","main/ui/routes/home/Home.tsx","main/utilities/hoc/withAuthRedirect.tsx","main/bll/state/profileReducer.ts","main/ui/common/preloader/Preloader.tsx","main/ui/routes/profile/Profile.tsx","main/ui/common/input/Input.tsx","main/ui/common/checkbox/Checkbox.tsx","main/ui/common/button/Button.tsx","main/ui/routes/login/Login.tsx","main/ui/routes/register/Register.tsx","main/ui/routes/settings/Settings.tsx","main/ui/routes/settings/newPassword/NewPassword.tsx","main/bll/state/passwordRestoreReducer.ts","main/ui/routes/settings/passwordRestore/PasswordRestore.tsx","main/ui/routes/features/Features.tsx","features/f0-test/Feature0.tsx","App.tsx","serviceWorker.ts","main/bll/state/store.ts","index.tsx","features/f0-test/Feature0.module.scss","main/ui/routes/home/Home.module.scss","main/ui/common/checkbox/Checkbox.module.scss"],"names":["module","exports","axiosInstance","axios","create","baseURL","withCredentials","loginAPI","email","password","remember","post","delete","authAPI","registerAPI","values","profileAPI","name","avatar","put","settingsAPI","from","message","token","resetPasswordToken","initialState","isCurrentPageProfile","initialized","INITIALIZED_SUCCESS","SET_PROFILE_AS_CURRENT_PAGE","initializedSuccessAC","type","setIsCurrentPageProfileAC","isCurrentPge","appReducer","state","action","isAuth","SET_AUTH","setAuthDataAC","getAuthInfoThunkCreator","dispatch","then","res","console","log","data","setLoginDataAC","catch","e","registerError","status","SET_ERROR","SET_STATUS","setRegisterErrorAC","setRegisterStatusAC","mewPasswordMessage","newPasswordError","SET_NEW_PASSWORD_MESSAGE","SET_NEW_PASSWORD_ERROR","setNewPasswordSuccessMessageAC","setNewPasswordErrorAC","_id","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","error","isLoading","SET_LOGIN_DATA","SET_LOADING","loginData","setLoginErrorAC","setLoadingAC","arrowDownElement","className","style","arrow_down","icon","faAngleDown","Header","useSelector","app","useState","isToggleCollapsed","setToggleCollapsed","isFeaturesSubMenuExpanded","setFeaturesSubMenuExpanded","isSettingsSubMenuExpanded","setSettingsSubMenuExpanded","auth","useDispatch","header","backgroundColor","container","logo_wrapper","logo_link","to","navbar","activeClassName","active_link","link","sub_menu_wrapper","sub_link","onClick","response","logout","btn_toggler","btn_collapse","vertical_navbar","onBlur","features_vertical_sub_menu_wrapper","particlesOptions","Home","home","particles","params","title_wrapper","withAuthRedirect","Component","props","SAVE_PROFILE_INFO","Preloader","obj","preloader","src","process","alt","compose","login","loginName","loginAvatar","loginEmail","setName","setAvatar","isChangeBtnClicked","setIsChangeBtnClicked","useEffect","display","justifyContent","alignItems","profile","profile_info","profile_info_header","profile_info_header_content","position","onChange","currentTarget","value","changeInfoThunkCreator","profile_info_save_btn","profile_info_change_btn","extra_info","profile_settings","Input","propsI","onEnter","onKeyPress","charCode","input","Checkbox","label","checkbox","labelText","Button","children","Login","setEmail","setPassword","setRemember","stateError","registerStatus","register","newPasswordMessage","newPassword","errorStyle","setErrorStyle","borderColor","login_form","color","fontSize","textAlign","maxWidth","form","placeholder","checked","trim","loginThunkCreator","width","zIndex","Register","errorStyle1","setErrorStyle1","errorStyle2","setErrorStyle2","formik","useFormik","validate","initialValues","onSubmit","registerThunkCreator","resetForm","register_form","id","handleChange","errors","handleSubmit","Settings","NewPassword","successMessage","useParams","new_password","new_password_form","info","setNewPasswordThunkCreator","passwordRestoreError","passwordRestoreSuccessMessage","SET_SUCCESS_MESSAGE","setSettingsErrorAC","setSettingsSuccessMessageAC","PasswordRestore","passwordRestore","password_restore","password_restore_form","restorePasswordThunkCreator","setTimeout","features","checkboxValue","setCheckboxValue","inputValue","setInputValue","feature0","common","checkbox_wrapper","input_wrapper","btn_wrapper","App","userId","getState","exact","path","render","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,UAAY,UAAU,MAAQ,uB,oBCAhDD,EAAOC,QAAU,CAAC,UAAY,UAAU,UAAY,4B,oBCApDD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,SAAW,6B,qGCA7BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,oBAAsB,qCAAqC,OAAS,wBAAwB,4BAA8B,6CAA6C,wBAA0B,yCAAyC,sBAAwB,uCAAuC,iBAAmB,oC,mBCA9ZD,EAAOC,QAAU,CAAC,UAAY,UAAU,MAAQ,qBAAqB,WAAa,0BAA0B,KAAO,oBAAoB,MAAQ,qBAAqB,MAAQ,qBAAqB,SAAW,wBAAwB,YAAc,2BAA2B,MAAQ,uB,kBCArRD,EAAOC,QAAU,CAAC,UAAY,UAAU,OAAS,uBAAuB,UAAY,0BAA0B,aAAe,6BAA6B,UAAY,0BAA0B,OAAS,uBAAuB,iBAAmB,iCAAiC,KAAO,qBAAqB,WAAa,2BAA2B,YAAc,4BAA4B,SAAW,yBAAyB,YAAc,4BAA4B,aAAe,6BAA6B,gBAAkB,gCAAgC,mCAAqC,mDAAmD,mCAAqC,qD,mBCA3qBD,EAAOC,QAAU,CAAC,UAAY,UAAU,SAAW,2BAA2B,cAAgB,gCAAgC,KAAO,uBAAuB,MAAQ,wBAAwB,MAAQ,wBAAwB,SAAW,6B,mBCAvOD,EAAOC,QAAU,CAAC,UAAY,UAAU,aAAe,kCAAkC,kBAAoB,uCAAuC,KAAO,0BAA0B,MAAQ,2BAA2B,SAAW,8BAA8B,MAAQ,2BAA2B,eAAiB,sC,mBCArTD,EAAOC,QAAU,CAAC,UAAY,UAAU,iBAAmB,0CAA0C,sBAAwB,+CAA+C,KAAO,8BAA8B,MAAQ,+BAA+B,MAAQ,+BAA+B,SAAW,kCAAkC,MAAQ,+BAA+B,eAAiB,0C,qKCG9XC,E,OAAgBC,EAAMC,OACxB,CAEIC,QAAS,uCAETC,iBAAiB,IAUZC,EAAW,SACdC,EAAeC,EAAkBC,GACnC,OACIR,EAAcS,KAAd,aAAiC,CAACH,QAAOC,WAAUC,cAHlDH,EAAW,WAOhB,OACIL,EAAcU,OAAd,UAAgC,KAK/BC,EAAU,WAEf,OACIX,EAAcS,KAAK,UAAW,KAM7BG,EAAc,SACdC,GACL,OACIb,EAAcS,KAAK,gBAAiBI,IAKnCC,EAAa,SACXC,EAAcC,GACrB,OACIhB,EAAciB,IAAI,UAAW,CAACF,OAAMC,YAKnCE,EAAc,SACfZ,GACJ,OACIN,EAAcS,KAAK,cAAe,CAC9BH,QACAa,KAAM,mCACNC,QAAQ,6UANXF,EAAc,SAgBRX,EAAkBc,GAE7B,OACIrB,EAAcS,KAAK,wBAAyB,CAACF,WAAUe,mBAAoBD,KCpEnFE,EAAe,CACfC,sBAAsB,EACtBC,aAAa,GA8BXC,EAAsB,sBACtBC,EAA8B,8BAWvBC,EAAuB,iBAAiC,CACjEC,KAAMH,IAGGI,EAA4B,SAACC,GAAD,MAA0D,CAC/FF,KAAMF,EAA6BI,iBAaxBC,EAxDI,WAA8F,IAA7FC,EAA4F,uDAAlEV,EAAcW,EAAoD,uCAE5G,OAAQA,EAAOL,MACX,KAAKH,EACD,OAAO,eACAO,EADP,CAEIR,aAAa,IAKrB,KAAKE,EACD,OAAO,eACAM,EADP,CAEIT,qBAAsBU,EAAOH,eAKrC,QACI,OAAOE,IC3BbV,EAAe,CACjBY,QAAO,GAwBLC,EAAW,WAOJC,EAAgB,SAACF,GAC1B,MAAO,CAACN,KAAM,WAAYM,WAGjBG,EAA0B,WACnC,OACI,SAACC,GAEG5B,IACK6B,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAIG,MAChBL,EAASM,EAAeJ,EAAIG,OAC5BL,EAASF,GAAc,IAEvBE,EAASX,QAGZkB,OAAM,SAACC,GACJR,EAASX,UCjDvBL,EAAe,CACjByB,cAAe,GACfC,OAAQ,GA4BNC,EAAY,YACZC,EAAa,aAWNC,EAAqB,SAACJ,GAC/B,MAAO,CAACnB,KAAM,YAAamB,kBAElBK,EAAsB,SAACJ,GAChC,MAAO,CAACpB,KAAM,aAAcoB,WChD1B1B,EAAc,CAChB+B,mBAAmB,GACnBC,iBAAiB,IA4BfC,EAAyB,2BACzBC,EAAuB,yBAWhBC,EAAiC,SAACJ,GAC3C,MAAO,CAACzB,KAAM,2BAA4ByB,uBAEjCK,EAAwB,SAACJ,GAClC,MAAO,CAAC1B,KAAM,yBAA0B0B,qBChCtChC,EAAe,CACjBqC,IAAK,GACLtD,MAAO,GACPS,KAAM,GACNC,OAAQ,GACR6C,qBAAsB,EACtBC,QAAS,GACTC,QAAS,GACTC,SAAS,EACTC,UAAU,EACVC,YAAY,EAEZC,MAAO,GACPC,WAAW,GA6CTC,EAAiB,iBACjBnB,EAAY,YACZoB,EAAc,cA4BPzB,EAAiB,SAAC0B,GAC3B,MAAO,CAAC1C,KAAM,iBAAkB0C,cAGvBC,EAAkB,SAACL,GAC5B,MAAO,CAACtC,KAAM,YAAasC,UAElBM,EAAe,SAACL,GACzB,MAAO,CAACvC,KAAM,cAAeuC,cC3G3BM,EAAmB,kBAAC,IAAD,CAAiBC,UAAWC,IAAMC,WAAYC,KAAMC,MA8O9DC,EA3OA,WAGX,IAAMxD,EAAqByD,aAAiC,SAAAhD,GAAK,OAAEA,EAAMiD,IAAI1D,wBAH5D,EAM+B2D,oBAAkB,GANjD,mBAMVC,EANU,KAMSC,EANT,OAO+CF,oBAAkB,GAPjE,mBAOVG,EAPU,KAOiBC,EAPjB,OAQ+CJ,oBAAkB,GARjE,mBAQVK,EARU,KAQiBC,EARjB,KAUbtD,EAAS8C,aAAkC,SAAAhD,GAAK,OAAIA,EAAMyD,KAAKvD,UAC7DI,EAAWoD,cAkCjB,OACI,yBAAKhB,UAAWC,IAAMgB,OAAQhB,MAAOpD,EAAuB,CAACqE,gBAAgB,WAAa,CAACA,gBAAgB,gBACvG,yBAAKlB,UAAWC,IAAMkB,UACjBlB,MAAQQ,EAAqD,CAAC,gBAAmB,eAArD,CAAC,gBAAmB,YAEjD,yBAAKT,UAAWC,IAAMmB,cAClB,kBAAC,IAAD,CAASpB,UAAWC,IAAMoB,UAAWC,GAAI,SAAzC,QACS,yCAIb,wBAAItB,UAAWC,IAAMsB,QACjB,4BACI,kBAAC,IAAD,CAASC,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KAAMJ,GAAI,SAAxE,SAGJ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,YADb,YAIJ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,aADb,YACoCvB,GACpC,wBAAIC,UAAWC,IAAM0B,kBACjB,4BACI,kBAAC,IAAD,CAASH,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAM2B,SACrDN,GAAI,aADb,gBAkBZ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,qBADb,YAoBJ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,aADb,aAKA9D,EACI,4BACI,kBAAC,IAAD,CAASqE,QAzGtB,WACXjE,GDoIA,SAACA,GAGGA,EAASkC,GAAa,IAEtBpE,IACKmC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZF,EAASM,EAAeJ,EAAIG,OAC5BL,EAASF,GAAc,IAGvBE,EAASkC,GAAa,OAEzB3B,OAAM,SAACC,GACJ,IAAMoB,EAAQpB,EAAE0D,SAAW1D,EAAE0D,SAAS7D,KAAKuB,MAASpB,EAAE3B,QAAU,2BAChEmB,EAASiC,EAAgBL,IACzBzB,QAAQC,IAAI,QAASwB,GAGrB5B,EAASkC,GAAa,WC/CDE,UAAWC,IAAM8B,OAAS,IAAM9B,IAAMyB,KACtCJ,GAAI,KAFb,YAMJ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,UADb,YAShB,4BAAQO,QArHC,WACjBnB,GAAoBD,IAoHmBT,UAAWS,EAAoBR,IAAM+B,YAAc/B,IAAMgC,cACpF,+BACA,+BACA,iCAMR,wBAAIjC,UAAWC,IAAMiC,gBAAiBjC,MAAQQ,EAI1C,CAAC,WAAc,SAAU,QAAW,KAJ0B,CAC9D,WAAc,UACd,QAAW,IACX,OAAU,OAEV,4BACI,kBAAC,IAAD,CAASe,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KAAMJ,GAAI,SAAxE,SAGJ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,YADb,YAIJ,wBAAIO,QAvIgB,WACxBhB,GACAC,GAA2B,GAE/BF,GAA4BD,IAmIkBwB,OAzHpB,WAC1BvB,GAA2B,KAyHf,kBAAC,IAAD,CAASY,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,aADb,YACoCvB,GAEpC,wBAAIC,UAAWC,IAAMmC,mCACjBnC,MAAOU,EAA4B,CAAC,WAAc,WAAa,CAAC,WAAc,WAC9E,4BACI,kBAAC,IAAD,CAASa,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAM2B,SACrDN,GAAI,aADb,gBAiBZ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,qBADb,YAyBJ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KACrDJ,GAAI,aADb,aAKA9D,EACI,4BACI,kBAAC,IAAD,CAASwC,UAAWC,IAAM8B,OAAS,IAAM9B,IAAMyB,KACtCJ,GAAI,KADb,YAKJ,4BACI,kBAAC,IAAD,CAASE,gBAAiBvB,IAAMwB,YAAazB,UAAWC,IAAMyB,KAAMJ,GAAI,UAAxE,c,iDCxNtBe,GAAwB,CAE1B,UAAa,CACT,OAAU,CACN,MAAS,GACT,QAAW,CACP,QAAU,EACV,WAAc,MAGtB,MAAS,CACL,MAAS,WAEb,MAAS,CACL,KAAQ,SACR,OAAU,CACN,MAAS,EACT,MAAS,WAEb,QAAW,CACP,SAAY,GAEhB,MAAS,CACL,MAAS,IACT,OAAU,MAGlB,QAAW,CACP,MAAS,GACT,QAAU,EACV,KAAQ,CACJ,QAAU,EACV,MAAS,EACT,YAAe,GACf,MAAQ,IAGhB,KAAQ,CACJ,MAAS,EACT,QAAU,EACV,KAAQ,CACJ,QAAU,EACV,MAAS,GACT,SAAY,GACZ,MAAQ,IAGhB,YAAe,CACX,QAAU,EACV,SAAY,IACZ,MAAS,UACT,QAAW,GACX,MAAS,GAEb,KAAQ,CACJ,QAAU,EACV,MAAS,EACT,UAAa,OACb,QAAU,EACV,UAAY,EACZ,SAAY,MACZ,QAAW,CACP,QAAU,EACV,QAAW,IACX,QAAW,QAIvB,cAAiB,CACb,UAAa,SACb,OAAU,CACN,QAAW,CACP,QAAU,EACV,KAAQ,WAEZ,QAAW,CACP,QAAU,EACV,KAAQ,QAEZ,QAAU,GAEd,MAAS,CACL,KAAQ,CACJ,SAAY,IACZ,YAAe,CACX,QAAW,IAGnB,OAAU,CACN,SAAY,IACZ,KAAQ,GACR,SAAY,EACZ,QAAW,EACX,MAAS,GAEb,QAAW,CACP,SAAY,KAEhB,KAAQ,CACJ,aAAgB,GAEpB,OAAU,CACN,aAAgB,KAI5B,eAAiB,EACjB,YAAe,CACX,WAAa,EACb,iBAAoB,UACpB,iBAAoB,GACpB,oBAAuB,UACvB,kBAAqB,YACrB,gBAAmB,UAmBZC,GAbF,WAET,OACI,yBAAKtC,UAAWC,KAAMsC,MAClB,kBAAC,KAAD,CAAWvC,UAAWC,KAAMuC,UAAWC,OAAQJ,KAC/C,yBAAKrC,UAAWC,KAAMyC,eAClB,sCAAW,6BAAX,oB,oBCxIHC,GAAmB,SAACC,GAa7B,OAXA,SAA2BC,GAGvB,OAFevC,aAAkC,SAAAhD,GAAK,OAAIA,EAAMyD,KAAKvD,UAK9D,kBAACoF,EAAcC,GAFX,kBAAC,IAAD,CAAUvB,GAAI,a,SCP3B1E,GAAe,CACjBR,KAAM,GACNC,OAAQ,IAuBNyG,GAAoB,oB,oBCjBXC,OATf,WACI,OACI,oCACI,yBAAK/C,UAAWgD,KAAIC,UAAWC,IAAKC,iCAAgDC,IAAK,oBC4HtFC,gBACXV,GADWU,EAvHC,WACZ,IAAMzF,EAAWoD,cAEbpB,EAAYU,aAA8B,SAAAhD,GAAK,OAAIA,EAAMgG,SACzD9F,EAAS8C,aAAkC,SAAAhD,GAAK,OAAIA,EAAMyD,KAAKvD,UAC/D+F,EAAYjD,aAAiC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAMlH,QAClEoH,EAAclD,aAAiC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAMjH,UACpEoH,EAAanD,aAAiC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAM3H,SAPrD,EAQM6E,mBAAiB+C,GARvB,mBAQXnH,EARW,KAQLsH,EARK,OASUlD,mBAAiBgD,GAT3B,mBASXnH,EATW,KASHsH,EATG,KAUZlE,EAAYa,aAAkC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAM7D,aAVvD,EAkBkCe,oBAAS,GAlB3C,mBAkBXoD,EAlBW,KAkBSC,EAlBT,KAuClB,OATAC,qBAAU,WAGN,OAFAlG,EAAST,GAA0B,IAE5B,WACHS,EAAST,GAA0B,OAExC,IAGCsC,EACO,yBAAKO,UAAU,MAAMC,MAAO,CAAC8D,QAAQ,OAAQC,eAAe,SAASC,WAAW,WACnF,kBAAC,GAAD,OAKJ,yBAAKjE,UAAWC,KAAMiE,SAGd1G,EACI,oCACI,yBAAKwC,UAAWC,KAAMkE,cAClB,yBAAKnE,UAAWC,KAAMmE,qBAElB,yBAAKpE,UAAWC,KAAM5D,OAAQ6G,IAAG,UAAM7G,GAAkB8G,2BACpDC,IAAI,WAET,yBAAKpD,UAAWC,KAAMoE,6BAEd5E,EACI,yBAAKQ,MAAO,CAACqE,SAAS,YAAatE,UAAWgD,KAAIC,UAAWC,IAAKC,iCAAgDC,IAAK,kBACrH,GAGNQ,EACI,oCACA,qCACI,2BAAOW,SAvDzB,SAACnG,GACvBsF,EAAQtF,EAAEoG,cAAcC,QAsDoDA,MAAOrI,KAE3C,uCACI,2BAAOmI,SAvD7B,SAACnG,GACvBuF,EAAUvF,EAAEoG,cAAcC,QAsDwDA,MAAOpI,MAKrD,sCAAW,8BAAOD,IAE1B,uCAAY,8BAAOqH,IAGfG,EACI,4BAAQ/B,QA3D/B,WACbjE,EFO8B,SAACxB,EAAaC,GAChD,OACI,SAACuB,GAGGA,EAASkC,GAAa,IAEtB3D,EAAsBC,EAAMC,GACvBwB,MAAK,SAACC,GACeA,EAAIG,KAAK7B,KAAK0B,EAAIG,KAAK5B,OACzCuB,EAASkC,GAAa,OAGzB3B,OAAM,SAACC,GAGJL,QAAQC,IAAI,QAASI,GAErBR,EAASkC,GAAa,QEzBzB4E,CAAuBtI,EAAKC,IACrCwH,GAAsB,IA0DsB7D,UAAWC,KAAM0E,uBADzB,QAIA,4BAAQ9C,QAlE7B,WACfgC,GAAsB,IAkEsB7D,UAAWC,KAAM2E,yBADzB,YAUhB,yBAAK5E,UAAWC,KAAM4E,YAClB,gDAAsBjF,EAAUV,wBAKxC,yBAAKc,UAAWC,KAAM6E,kBAClB,gDAEA,kCAAQlF,EAAUX,KAClB,uCAAaW,EAAUT,SACvB,uCAAaS,EAAUR,SACvB,wCAAcQ,EAAUP,QAAU,MAAQ,KAA1C,KACA,2CAAiBO,EAAUN,SAAW,MAAQ,KAA9C,KACA,6CAAmBM,EAAUL,WAAa,MAAQ,KAAlD,OAGN,O,mDC3FPwF,GApBD,SAACC,GAA4B,IAEhCC,EAAqBD,EAArBC,QAF+B,aAEVD,EAFU,aAStC,OACQ,yCACIE,WAPY,SAAC9G,GACF,KAAfA,EAAE+G,UACFF,GAAWA,KAMPjF,UAAWC,KAAMmF,MACjBlI,KAAM,QACF8H,K,oBCHLK,GAfE,SAACxC,GAEd,OACI,2BAAO7C,UAAWC,KAAMqF,OACpB,yCACItF,UAAWC,KAAMsF,SACjBrI,KAAM,YACF2F,IAER,kCAAQA,EAAM2C,a,qBCKXC,GAVA,SAAC5C,GAEZ,OACI,uCAAK7C,UAAWC,KAAMkB,WAAe0B,GACjC,2BAAIA,EAAM6C,YC0HPC,GA/HD,WAAO,IAAD,EAEUnF,mBAAS,IAFnB,mBAET7E,EAFS,KAEFiK,EAFE,OAGgBpF,mBAAS,IAHzB,mBAGT5E,EAHS,KAGCiK,EAHD,OAIgBrF,oBAAS,GAJzB,mBAIT3E,EAJS,KAICiK,EAJD,KAKVlI,EAAWoD,cAEX+E,EAAazF,aAAiC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAM9D,SAEnEhC,EAAS8C,aAAkC,SAAAhD,GAAK,OAAIA,EAAMyD,KAAKvD,UAC/DiC,EAAYa,aAAkC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAM7D,aACnEuG,EAAiB1F,aAAiC,SAAAhD,GAAK,OAAIA,EAAM2I,SAAS3H,UAC1E4H,EAAqB5F,aAAiC,SAAAhD,GAAK,OAAIA,EAAM6I,YAAYxH,sBACjFC,EAAmB0B,aAAiC,SAAAhD,GAAK,OAAIA,EAAM6I,YAAYvH,oBAbrE,EAwBoB4B,mBAAS,IAxB7B,mBAwBT4F,EAxBS,KAwBGC,EAxBH,KAuDhB,OA5BAvC,qBAAU,WACN,OAAO,WACH8B,EAAS,IACTC,EAAY,IACZC,GAAY,GACZlI,EAASiC,EAAgB,QAE/B,IAEFiE,qBAAU,WAEFuC,EADAN,EACc,CACVO,YAAa,WAGH,MAGnB,CAACP,IAUAvI,EACO,kBAAC,IAAD,CAAU8D,GAAG,aAKpB,yBAAKtB,UAAWC,KAAMqD,OAElB,yBAAKtD,UAAWC,KAAMsG,YAClB,sCAGuB,MAAnBP,EACI,uBAAG/F,MAAO,CAACuG,MAAO,QAASC,SAAU,OAAQC,UAAW,SAAUC,SAAU,QAA5E,2DAG6B,GAGjCT,IAAuBtH,EACnB,uBAAGqB,MAAO,CAACuG,MAAO,QAASC,SAAU,OAAQC,UAAW,SAAUC,SAAU,QAA5E,6DAEE,GASV,yBAAK3G,UAAWC,KAAM2G,MAClB,kBAAC,GAAD,CAAO3G,MAAOmG,EAAY7B,SAAU,SAACnG,GACjCwH,EAASxH,EAAEoG,cAAcC,QAEtBA,MAAO9I,EACPqE,UAAWC,KAAMmF,MAAQ,IAAMnF,KAAMtE,MACrCkL,YAAa,UAEpB,kBAAC,GAAD,CAAO5G,MAAOmG,EAAY7B,SAAU,SAACnG,GACjCyH,EAAYzH,EAAEoG,cAAcC,QAEzBA,MAAO7I,EACPoE,UAAWC,KAAMmF,MAAQ,IAAMnF,KAAMrE,SACrCiL,YAAa,WACb3J,KAAM,aAEb,+BACI,kBAAC,GAAD,CACI+C,MAAOmG,EACPU,QAASjL,EACT0I,SAAU,SAACnG,GACP0H,GAAajK,MALzB,kBASJ,uBAAGmE,UAAWC,KAAMT,OAAQuG,GAE5B,kBAAC,GAAD,CAAQlE,QAlGJ,WACS,KAAjBlG,EAAMoL,QAAqC,KAApBnL,EAASmL,OAChCnJ,EAASiC,EAAgB,iCAEzBjC,EAASiC,EAAgB,KACzBjC,EVuFqB,SAACjC,EAAeC,EAAkBC,GAC/D,OACI,SAAC+B,GAIGA,EAASkC,GAAa,IAEtBpE,EAAeC,EAAOC,EAAUC,GAC3BgC,MAAK,SAACC,GACHC,QAAQC,IAAIF,GAEZF,EAASM,EAAeJ,EAAIG,OAC5BL,EAASF,GAAc,IAGvBE,EAASc,EAAoB,IAC7Bd,EAASa,EAAmB,KAG5Bb,EAASoB,EAAsB,KAC/BpB,EAASmB,EAA+B,KAExCnB,EAASkC,GAAa,OAGzB3B,OAAM,SAACC,GACJ,IAAMoB,EAAQpB,EAAE0D,SAAW1D,EAAE0D,SAAS7D,KAAKuB,MAASpB,EAAE3B,QAAU,0BAChEmB,EAASiC,EAAgBL,IACzBzB,QAAQC,IAAI,QAASwB,GAErB5B,EAASkC,GAAa,QUtHrBkH,CAAkBrL,EAAOC,EAAUC,MA6FdoE,MAAO,CAACgH,MAAO,UAAzC,WAKAxH,GACA,yBAAKQ,MAAO,CAACqE,SAAU,WAAY4C,OAAQ,MAAOlH,UAAWgD,KAAIC,UAC5DC,IAAKC,iCAAgDC,IAAK,oB,8BCFhE+D,GAtHE,WACb,IAAM9I,EAAgBiC,aAAiC,SAAAhD,GAAK,OAAIA,EAAM2I,SAAS5H,iBACzE2H,EAAiB1F,aAAiC,SAAAhD,GAAK,OAAIA,EAAM2I,SAAS3H,UAC1EmB,EAAYa,aAAkC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAM7D,aACnE7B,EAAWoD,cAJE,EAKmBR,mBAAS,IAL5B,mBAKZ4G,EALY,KAKCC,EALD,OAMmB7G,mBAAS,IAN5B,mBAMZ8G,EANY,KAMCC,EAND,KAQnBzD,qBAAU,WACFzF,GACAgJ,EAAe,CACXf,YAAa,YAEjBiB,EAAe,CACXjB,YAAa,cAGjBe,EAAe,IACfE,EAAe,OAGpB,CAAClJ,IAGJ,IAAMmJ,EAASC,aAAU,CAGrBC,SAAU,SAACxL,GACP,OAAKA,EAAOP,OASR0L,EAAe,IAGdnL,EAAON,cASR2L,EAAe,KARfA,EAAe,CACXjB,YAAa,YAEV,CACH1K,SAAU,2BAhBdyL,EAAe,CACXf,YAAa,YAEV,CACH3K,MAAO,uBAqBnBgM,cAAe,CACXhM,MAAO,GACPC,SAAU,IAEdgM,SAAU,SAAA1L,GACN0B,EbRwB,SAAC1B,GACjC,OACI,SAAC0B,GAGGA,EAASkC,GAAa,IAEtB7D,EAAqBC,GAChB2B,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZF,EAASc,EAAoBZ,EAAIQ,SACjCV,EAASkC,GAAa,IACtBlC,EAASa,EAAmB,QAG/BN,OAAM,SAACC,GACJ,IAAMoB,EAAQpB,EAAE0D,SAAW1D,EAAE0D,SAAS7D,KAAKuB,MAASpB,EAAE3B,QAAU,0BAChEsB,QAAQC,IAAI,QAASwB,GAErB5B,EAASa,EAAmBe,IAE5B5B,EAASkC,GAAa,QabrB+H,CAAqB3L,OAUtC,OANA4H,qBAAU,WACiB,MAAnBkC,GACAwB,EAAOM,cAEZ,CAAC9B,EAAgB3H,IAEG,MAAnB2H,EACO,kBAAC,IAAD,CAAU1E,GAAG,WAIpB,yBAAKtB,UAAWC,KAAMgG,UAClB,yBAAKjG,UAAWC,KAAM8H,eAClB,4CAGA,yBAAK/H,UAAWC,KAAM2G,MAClB,kBAAC,GAAD,CACI3G,MAAOmH,EACPY,GAAG,QACH5L,KAAK,QACLmI,SAAUiD,EAAOS,aACjBxD,MAAO+C,EAAOtL,OAAOP,MACrBqE,UAAWC,KAAMmF,MAAQ,IAAMnF,KAAMtE,MACrCkL,YAAa,UAGhBW,EAAOU,OAAOvM,MAAQ,yBAAKsE,MAAO,CAACuG,MAAM,QAASgB,EAAOU,OAAOvM,OAAe,KAChF,kBAAC,GAAD,CACIsE,MAAOqH,EACPtH,UAAWC,KAAMmF,MAAQ,IAAMnF,KAAMrE,SACrCiL,YAAa,WACb3J,KAAM,WACN8K,GAAG,WACH5L,KAAK,WACLmI,SAAUiD,EAAOS,aACjBxD,MAAO+C,EAAOtL,OAAON,WAExB4L,EAAOU,OAAOtM,SAAW,yBAAKqE,MAAO,CAACuG,MAAM,QAASgB,EAAOU,OAAOtM,UAAkB,MAIzFyC,EAAgB,yBAAK4B,MAAO,CAACuG,MAAM,QAASnI,GAAwB,GAErE,kBAAC,GAAD,CAAQwD,QAAS,kBAAM2F,EAAOW,gBAAgBlI,MAAO,CAACgH,MAAO,UAA7D,aAGAxH,GACA,yBAAKQ,MAAO,CAACqE,SAAU,WAAY4C,OAAQ,MAAOlH,UAAWgD,KAAIC,UAC5DC,IAAKC,iCAAgDC,IAAK,oBC3GhEgF,I,OAZA,WAGX,OAAO,kBAAC,IAAD,CAAU9G,GAAG,wB,oBC+FT+G,GA5FK,WAEhB,IAAMzK,EAAWoD,cAFK,EAGUR,mBAAS,IAHnB,mBAGf5E,EAHe,KAGLiK,EAHK,KAIlBjH,EAAmB0B,aAAiC,SAAAhD,GAAK,OAAIA,EAAM6I,YAAYvH,oBAC/E0J,EAAiBhI,aAAiC,SAAAhD,GAAK,OAAIA,EAAM6I,YAAYxH,sBAL3D,EAMc6B,mBAAS,IANvB,mBAMf4F,EANe,KAMHC,EANG,KAQf3J,EAAS6L,cAAT7L,MAePoH,qBAAU,YACFlF,GAAoB0J,GACpBzC,EAAY,IAMZQ,EAJAzH,EAIc,CACV0H,YAAa,WAJH,MAOpB,CAAC1H,EAAiB0J,IAEpBxE,qBAAU,WACN,OAAO,WACHlG,EAASoB,EAAsB,QAErC,IAEF,IAAMS,EAAYa,aAAkC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAM7D,aASzE,OAAG6I,IAAmB1J,EACX,kBAAC,IAAD,CAAU0C,GAAG,WAIpB,yBAAKtB,UAAWC,KAAMuI,cAClB,yBAAKxI,UAAWC,KAAMwI,mBAClB,4CAGA,yBAAKzI,UAAWC,KAAM2G,MAClB,kBAAC,GAAD,CAAO3G,MAAOmG,EAAY7B,SAAU,SAACnG,GACjCyH,EAAYzH,EAAEoG,cAAcC,QAEzBvH,KAAM,WACNuH,MAAO7I,EACPoE,UAAWC,KAAMmF,MAAQ,IAAMnF,KAAMrE,SACrCiL,YAAa,uBAKpBjI,GAAoB,uBAAGoB,UAAWC,KAAMT,OAAQZ,GAGhD0J,GAAkB,uBAAGtI,UAAWC,KAAMqI,gBAAiBA,GAI3D,kBAAC,GAAD,CAAQzG,QAxEI,WACC,KAAlBjG,EAASmL,QACRV,EAAc,CACVC,YAAa,YAEjB1I,EAASoB,EAAsB,kCAG/BpB,Ed2B8B,SAAChC,EAAkBc,GACzD,OACI,SAACkB,GAGGA,EAASkC,GAAa,IAEtBvD,EAA2BX,EAASc,GAC/BmB,MAAK,SAACC,GAEHF,EAASmB,EAA+BjB,EAAIG,KAAKyK,OACjD9K,EAASoB,EAAsB,KAC/BpB,EAASkC,GAAa,OAGzB3B,OAAM,SAACC,GACJ,IAAMoB,EAAQpB,EAAE0D,SAAW1D,EAAE0D,SAAS7D,KAAKuB,MAASpB,EAAE3B,QAAU,0BAChEmB,EAASoB,EAAsBQ,IAE/BzB,QAAQC,IAAI,QAASwB,GAErB5B,EAASkC,GAAa,QchDrB6I,CAA2B/M,EAASc,IAC7CmJ,EAAY,MA+D0B5F,MAAO,CAACgH,MAAO,UAAjD,SAGAxH,GACA,yBAAKQ,MAAO,CAACqE,SAAU,WAAY4C,OAAQ,MAAOlH,UAAWgD,KAAIC,UAC5DC,IAAKC,iCAAgDC,IAAK,oB,oBC5FzExG,GAAc,CAChBgM,qBAAqB,GACrBC,8BAA8B,IA8B5BtK,GAAU,YACVuK,GAAoB,sBAWbC,GAAqB,SAACH,GAC/B,MAAO,CAAC1L,KAAM,YAAa0L,yBAElBI,GAA8B,SAACH,GACxC,MAAO,CAAC3L,KAAM,sBAAuB2L,kCCkD1BI,GAzFS,WAEpB,IAAMrL,EAAWoD,cAFS,EAGAR,mBAAS,IAHT,mBAGnB7E,EAHmB,KAGZiK,EAHY,KAItBgD,EAAuBtI,aAAiC,SAAAhD,GAAK,OAAIA,EAAM4L,gBAAgBN,wBACvFN,EAAiBhI,aAAiC,SAAAhD,GAAK,OAAIA,EAAM4L,gBAAgBL,iCAL3D,EAMUrI,mBAAS,IANnB,mBAMnB4F,EANmB,KAMPC,EANO,KAsB1BvC,qBAAU,YACF8E,GAAwBN,GACxB1C,EAAS,IAMTS,EAJAuC,EAIc,CACVtC,YAAa,WAJH,MAOpB,CAACsC,EAAqBN,IAExBxE,qBAAU,WACN,OAAO,WACHlG,EAASmL,GAAmB,KAC5BnD,EAAS,OAEf,IAGF,IAAMnG,EAAYa,aAAkC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAM7D,aAWzE,OACI,yBAAKO,UAAWC,KAAMkJ,kBAClB,yBAAKnJ,UAAWC,KAAMmJ,uBAClB,gDAGA,yBAAKpJ,UAAWC,KAAM2G,MAClB,kBAAC,GAAD,CAAO3G,MAAOmG,EAAY7B,SAAU,SAACnG,GACjCwH,EAASxH,EAAEoG,cAAcC,QAEtBA,MAAO9I,EACPqE,UAAWC,KAAMmF,MAAQ,IAAMnF,KAAMtE,MACrCkL,YAAa,qBAIpB+B,GAAwB,uBAAG5I,UAAWC,KAAMT,OAAQoJ,GAGpDN,GAAkB,uBAAGtI,UAAWC,KAAMqI,gBAAiBA,GAI3D,kBAAC,GAAD,CAAQzG,QAvEI,WAEF,KAAflG,EAAMoL,OACLnJ,EAASmL,GAAmB,iCAG5BnL,EAASmL,GAAmB,KAC5BnL,ED6B+B,SAACjC,GACxC,OACI,SAACiC,GAGGA,EAASkC,GAAa,IAEtBvD,EAAoBZ,GACfkC,MAAK,SAACC,GAEHF,EAASoL,GAA4BlL,EAAIG,KAAKyK,OAC9C9K,EAASmL,GAAmB,KAC5BnL,EAASkC,GAAa,OAGzB3B,OAAM,SAACC,GACJ,IAAMoB,EAAQpB,EAAE0D,SAAW1D,EAAE0D,SAAS7D,KAAKuB,MAASpB,EAAE3B,QAAU,0BAChEmB,EAASmL,GAAmBvJ,IAC5BzB,QAAQC,IAAI,QAASwB,GAErB5B,EAASkC,GAAa,QCjDrBuJ,CAA4B1N,IACrC2N,YAAW,WACP1L,EAASoL,GAA4B,KACrCV,EAAiB,KAClB,OA4DmCrI,MAAO,CAACgH,MAAO,UAAjD,SAGAxH,GACA,yBAAKQ,MAAO,CAACqE,SAAU,WAAY4C,OAAQ,MAAOlH,UAAWgD,KAAIC,UAC5DC,IAAKC,iCAAgDC,IAAK,oB,qBCjFhEC,gBACXV,GADWU,EAVE,WAGb,OACI,yBAAKrD,UAAWC,KAAMsJ,UAAtB,e,oBCoCOlG,gBACXV,GADWU,EAtCE,WAAO,IAAD,EAGuB7C,oBAAS,GAHhC,mBAGZgJ,EAHY,KAGGC,EAHH,OAQiBjJ,mBAAS,IAR1B,mBAQZkJ,EARY,KAQAC,EARA,KAanB,OACI,yBAAK3J,UAAWC,KAAM2J,UAClB,iDAIA,yBAAK5J,UAAWC,KAAM4J,QAClB,yBAAK7J,UAAWC,KAAM6J,kBAClB,kBAAC,GAAD,CAAUvF,SAjBF,WACpBkF,GAAkBD,IAgB+B1C,QAAS0C,EAAehE,UAAW,WAG5E,yBAAKxF,UAAWC,KAAM8J,eAClB,kBAAC,GAAD,CAAOxF,SAhBD,SAACnG,GACnBuL,EAAcvL,EAAEoG,cAAcC,QAecA,MAAOiF,EAAY7C,YAAa,cAGpE,yBAAK7G,UAAWC,KAAM+J,aAClB,kBAAC,GAAD,qBCsBLC,GAzCH,WAER,IAAMrM,EAAWoD,cAEXkJ,EAAS5J,aAAiC,SAAAhD,GAAK,OAAIA,EAAMgG,MAAMrE,OASrE,OARA6E,qBAAU,WACFoG,GACAtM,GtBsCJ,SAACA,EAAeuM,GACZvM,EAASD,UsBpCd,IAEiB2C,aAAkC,SAAAhD,GAAK,OAAIA,EAAMiD,IAAIzD,eAYrE,yBAAKkD,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOoK,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAUhJ,GAAI,aAClD,kBAAC,IAAD,CAAO+I,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,GAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,GAAD,SACrC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,uBAAuBC,OAAQ,kBAAM,kBAAC,GAAD,SACjD,kBAAC,IAAD,CAAOD,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,GAAD,UApBtC,yBAAKtK,UAAU,MAAMC,MAAO,CAAC8D,QAAQ,OAAQC,eAAe,SAASC,WAAW,WAC5E,kBAAC,GAAD,QCtBIsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCPAC,GAAcC,aAAgB,CAChCtK,IAAKlD,EACL0D,KvBCuB,WAAoF,IAAnFzD,EAAkF,uDAAxDV,EAAcW,EAA0C,uCAC1G,OAAQA,EAAOL,MAGX,KAAKO,EACD,OAAO,eACAH,EADP,CAEIE,OAAQD,EAAOC,SAIvB,QACI,OAAOF,IuBZfgG,MpByBwB,WAAoF,IAAnFhG,EAAkF,uDAAxDV,EAAcW,EAA0C,uCAC3G,OAAQA,EAAOL,MAEX,KAAKwC,EACD,OAAO,eACApC,EADP,CAEI2B,IAAK1B,EAAOqC,UAAUX,IACtBtD,MAAO4B,EAAOqC,UAAUjE,MACxBS,KAAMmB,EAAOqC,UAAUxD,KACvBC,OAAQkB,EAAOqC,UAAUvD,OACzB6C,qBAAsB3B,EAAOqC,UAAUV,qBACvCC,QAAS5B,EAAOqC,UAAUT,QAC1BC,QAAS7B,EAAOqC,UAAUR,QAC1BC,QAAS9B,EAAOqC,UAAUP,QAC1BC,SAAU/B,EAAOqC,UAAUN,SAC3BC,WAAYhC,EAAOqC,UAAUL,WAC7BC,MAAO,KAIf,KAAKjB,EACD,OAAO,eACAjB,EADP,CAEIkC,MAAOjC,EAAOiC,QAGtB,KAAKG,EACD,OAAO,eACArC,EADP,CAEImC,UAAWlC,EAAOkC,YAI1B,QACI,OAAOnC,IoB1Df2I,StBC2B,WAAoF,IAAnF3I,EAAkF,uDAAxDV,EAAcW,EAA0C,uCAC9G,OAAQA,EAAOL,MACX,KAAKsB,EACD,OAAO,eACAlB,EADP,CAEIgB,OAAQf,EAAOe,SAIvB,KAAKC,EACD,OAAO,eACAjB,EADP,CAEIe,cAAed,EAAOc,gBAI9B,QACI,OAAOf,IsBjBf4L,gBNDkC,WAAmF,IAAlF5L,EAAiF,uDAAvDV,GAAcW,EAAyC,uCACpH,OAAQA,EAAOL,MAEX,KAAKqB,GACD,OAAO,eACAjB,EADP,CAEIsL,qBAAqBrL,EAAOqL,uBAGpC,KAAKE,GACD,OAAO,eACAxL,EADP,CAEIuL,8BAA8BtL,EAAOsL,gCAI7C,QACI,OAAOvL,IMff6I,YrBH8B,WAAmF,IAAlF7I,EAAiF,uDAAvDV,EAAcW,EAAyC,uCAChH,OAAQA,EAAOL,MAEX,KAAK2B,EACD,OAAO,eACAvB,EADP,CAEIqB,mBAAmBpB,EAAOoB,qBAGlC,KAAKG,EACD,OAAO,eACAxB,EADP,CAEIsB,iBAAkBrB,EAAOqB,mBAIjC,QACI,OAAOtB,IqBbf4G,QhBL0B,WAAoF,IAAnF5G,EAAkF,uDAAxDV,GAAcW,EAA0C,uCAC7G,OAAQA,EAAOL,MAEX,KAAK4F,GACD,OAAO,eACAxF,EADP,CAEIlB,KAAMmB,EAAOnB,KACbC,OAAQkB,EAAOlB,SAIvB,QACI,OAAOiB,MgBDNwN,GAAQC,aAAYH,GAAaI,aAAgBC,OCb9DC,IAASZ,OAEL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUQ,MAAOA,IACb,kBAAC,GAAD,QAIRK,SAASC,eAAe,SFwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1N,MAAK,SAAA2N,GACJA,EAAaC,gBAEdtN,OAAM,SAAAqB,GACLzB,QAAQyB,MAAMA,EAAM/C,a,mBGhJ5BtB,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,cAAgB,gCAAgC,YAAc,8BAA8B,iBAAmB,qC,mBCAzMD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,cAAgB,8B,mBCAhGD,EAAOC,QAAU,CAAC,UAAY,UAAU,MAAQ,wBAAwB,SAAW,8B","file":"static/js/main.b0d8e579.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"input\":\"Input_input__1n4NA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"container\":\"Button_container__3_c7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__2NJoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"features\":\"Features_features__mGMdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__30OeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__AetUm\",\"profile_info\":\"Profile_profile_info__1PfUa\",\"profile_info_header\":\"Profile_profile_info_header__2xvY9\",\"avatar\":\"Profile_avatar__1LxdJ\",\"profile_info_header_content\":\"Profile_profile_info_header_content__13Kdz\",\"profile_info_change_btn\":\"Profile_profile_info_change_btn__2sM0D\",\"profile_info_save_btn\":\"Profile_profile_info_save_btn__3iysm\",\"profile_settings\":\"Profile_profile_settings__1LZv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"login\":\"Login_login__1nefd\",\"login_form\":\"Login_login_form__2Hk-O\",\"form\":\"Login_form__2KocX\",\"input\":\"Login_input__2ACDp\",\"email\":\"Login_email__L_6yG\",\"password\":\"Login_password__16r6P\",\"credentials\":\"Login_credentials__1UL_-\",\"error\":\"Login_error__mGFfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"header\":\"header_header__GKVcJ\",\"container\":\"header_container__3mAkQ\",\"logo_wrapper\":\"header_logo_wrapper__3RVIo\",\"logo_link\":\"header_logo_link__1q_JQ\",\"navbar\":\"header_navbar__3IRKj\",\"sub_menu_wrapper\":\"header_sub_menu_wrapper__vvg2N\",\"link\":\"header_link__hBm0G\",\"arrow_down\":\"header_arrow_down__Qg_RU\",\"active_link\":\"header_active_link__2AOd8\",\"sub_link\":\"header_sub_link__2gvmt\",\"btn_toggler\":\"header_btn_toggler__j2h3Y\",\"btn_collapse\":\"header_btn_collapse__1HNc0\",\"vertical_navbar\":\"header_vertical_navbar__2OaZF\",\"features_vertical_sub_menu_wrapper\":\"header_features_vertical_sub_menu_wrapper__32ZxF\",\"settings_vertical_sub_menu_wrapper\":\"header_settings_vertical_sub_menu_wrapper__1p9qF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"register\":\"Register_register__2a6V8\",\"register_form\":\"Register_register_form__33omE\",\"form\":\"Register_form__38cOF\",\"input\":\"Register_input__akZVV\",\"email\":\"Register_email__WBOhK\",\"password\":\"Register_password__3TH2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"new_password\":\"NewPassword_new_password__2BPgX\",\"new_password_form\":\"NewPassword_new_password_form__1H4nf\",\"form\":\"NewPassword_form__2vPYl\",\"input\":\"NewPassword_input__1V696\",\"password\":\"NewPassword_password__18W2E\",\"error\":\"NewPassword_error__2FJCV\",\"successMessage\":\"NewPassword_successMessage__1RvbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"password_restore\":\"PasswordRestore_password_restore__3d5cq\",\"password_restore_form\":\"PasswordRestore_password_restore_form__3cL8m\",\"form\":\"PasswordRestore_form__PWpVz\",\"input\":\"PasswordRestore_input__1GrcZ\",\"email\":\"PasswordRestore_email__2mtYU\",\"password\":\"PasswordRestore_password__PanrV\",\"error\":\"PasswordRestore_error__3W3IG\",\"successMessage\":\"PasswordRestore_successMessage__Hackm\"};","import axios from \"axios\";\r\nimport {registerFieldsType} from \"../bll/state/registerReducer\";\r\n\r\n\r\nconst axiosInstance = axios.create(\r\n    {\r\n        // TODO Change before every deploy\r\n        baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n        // baseURL: 'http://localhost:7542/2.0/',\r\n        withCredentials: true,\r\n        // headers: {'API-KEY': '0b2bdd80-32f2-11ea-aa6d-ebd61add4aaa'}\r\n    },\r\n);\r\n\r\n\r\ntype LoginResponseType = {}\r\n\r\n// email: \"nya-admin@nya.nya\"\r\n// password: \"1qazxcvBG\"\r\nexport const loginAPI = {\r\n    login(email: string, password: string, remember: boolean) {\r\n        return (\r\n            axiosInstance.post(`auth/login`, {email, password, remember})\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            axiosInstance.delete(`auth/me`, {})\r\n        )\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    auth() {\r\n        return (\r\n            axiosInstance.post('auth/me', {})\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const registerAPI = {\r\n    register(values: registerFieldsType) {\r\n        return (\r\n            axiosInstance.post('auth/register', values)\r\n        )\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    changeInfo(name: string, avatar: string) {\r\n        return (\r\n            axiosInstance.put('auth/me', {name, avatar})\r\n        )\r\n    }\r\n}\r\n\r\nexport const settingsAPI = {\r\n    restore(email: string) {\r\n        return (\r\n            axiosInstance.post('auth/forgot', {\r\n                email,\r\n                from: '<alexeygorbachevskiyy@gmail.com>',\r\n                message: `<div style=\"background-color: lime; padding:15px; font-size: 16px\">\r\nPassword recovery link: \r\n<!--TODO Change before every deploy-->\r\n<a href=\"https://alexeygorbachevskiy.github.io/PartyCards/#/new_password/$token$\">Link</a>\r\n<!--<a href=\"http://localhost:3000/PartyCards#/new_password/$token$\">Link</a>-->\r\n</div>`\r\n            })\r\n        )\r\n    },\r\n\r\n    setNewPassword(password: string, token: string) {\r\n\r\n        return (\r\n            axiosInstance.post('auth/set-new-password', {password, resetPasswordToken: token})\r\n        )\r\n    }\r\n}\r\n\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootType} from \"./store\";\r\nimport {getAuthInfoThunkCreator} from \"./authReducer\";\r\n\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nlet initialState = {\r\n    isCurrentPageProfile: false,\r\n    initialized: false\r\n}\r\n\r\nexport type AppReducerActionTypes = InitializedSuccessACType | SetIsCurrentPageProfileACType\r\nconst appReducer = (state: initialStateType = initialState, action: AppReducerActionTypes): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n\r\n            }\r\n        }\r\n\r\n        case SET_PROFILE_AS_CURRENT_PAGE:{\r\n            return {\r\n                ...state,\r\n                isCurrentPageProfile: action.isCurrentPge\r\n\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\nconst SET_PROFILE_AS_CURRENT_PAGE = 'SET_PROFILE_AS_CURRENT_PAGE';\r\n\r\nexport type InitializedSuccessACType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\nexport type SetIsCurrentPageProfileACType = {\r\n    type: typeof SET_PROFILE_AS_CURRENT_PAGE,\r\n    isCurrentPge: boolean\r\n}\r\n\r\n\r\nexport const initializedSuccessAC = (): InitializedSuccessACType => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const setIsCurrentPageProfileAC = (isCurrentPge:boolean): SetIsCurrentPageProfileACType => ({\r\n    type: SET_PROFILE_AS_CURRENT_PAGE, isCurrentPge\r\n});\r\n\r\n\r\nexport const initializeAppThunkCreator = (): ThunkAction<void, AppRootType, unknown, AppReducerActionTypes> => {\r\n    return (\r\n        (dispatch: any, getState) => {\r\n            dispatch(getAuthInfoThunkCreator())\r\n        }\r\n    )\r\n};\r\n\r\n\r\nexport default appReducer;\r\n","\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../dal/API\";\r\nimport {setLoginDataAC, SetLoginDataACType} from \"./loginReducer\";\r\nimport {initializedSuccessAC, InitializedSuccessACType} from \"./appReducer\";\r\n\r\nexport type initialStateType = typeof initialState\r\nconst initialState = {\r\n    isAuth:false,\r\n}\r\n\r\n\r\ntype ActionTypes = AuthDataACResponseType | SetLoginDataACType\r\n\r\nexport const authReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n\r\n\r\n        case SET_AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst SET_AUTH = 'SET_AUTH'\r\n\r\nexport type AuthDataACResponseType = {\r\n    type: typeof SET_AUTH,\r\n    isAuth:boolean\r\n}\r\n\r\nexport const setAuthDataAC = (isAuth: boolean): AuthDataACResponseType => {\r\n    return {type: 'SET_AUTH', isAuth}\r\n}\r\n\r\nexport const getAuthInfoThunkCreator = () => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | InitializedSuccessACType>) => {\r\n\r\n            authAPI.auth()\r\n                .then((res) => {\r\n                    console.log(res.data)\r\n                    dispatch(setLoginDataAC(res.data))\r\n                    dispatch(setAuthDataAC(true))\r\n\r\n                    dispatch(initializedSuccessAC())\r\n\r\n                })\r\n                .catch((e) => {\r\n                    dispatch(initializedSuccessAC())\r\n                    // const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    // dispatch(setLoginErrorAC(error))\r\n                    // console.log('Error', error)\r\n\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n","// export let smth = v1();\r\n\r\nimport {Dispatch} from \"redux\";\r\nimport {AuthDataACResponseType} from \"./authReducer\";\r\nimport {registerAPI} from \"../../dal/API\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    registerError: '',\r\n    status: 0,\r\n}\r\n\r\n\r\ntype ActionTypes = SetRegisterErrorACType | SetRegisterStatusACType\r\n\r\nexport const registerReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                registerError: action.registerError\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nexport type SetRegisterErrorACType = {\r\n    type: typeof SET_ERROR,\r\n    registerError: string\r\n}\r\nexport type SetRegisterStatusACType = {\r\n    type: typeof SET_STATUS,\r\n    status: number\r\n}\r\n\r\nexport const setRegisterErrorAC = (registerError: string): SetRegisterErrorACType => {\r\n    return {type: 'SET_ERROR', registerError}\r\n}\r\nexport const setRegisterStatusAC = (status: number): SetRegisterStatusACType => {\r\n    return {type: 'SET_STATUS', status}\r\n}\r\n\r\nexport type registerFieldsType = {\r\n    email: string,\r\n    password: string\r\n}\r\n\r\n\r\nexport const registerThunkCreator = (values: registerFieldsType) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | AuthDataACResponseType | SetLoadingACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            registerAPI.register(values)\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    dispatch(setRegisterStatusAC(res.status))\r\n                    dispatch(setLoadingAC(false))\r\n                    dispatch(setRegisterErrorAC(''))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setRegisterErrorAC(error))\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport {Dispatch} from \"redux\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\nimport {settingsAPI} from \"../../dal/API\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState= {\r\n    mewPasswordMessage:'',\r\n    newPasswordError:'',\r\n}\r\n\r\n\r\ntype ActionTypes = SetNewPasswordSuccessMessageACType | SetNewPasswordErrorACType\r\n\r\nexport const newPasswordReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType=> {\r\n    switch (action.type) {\r\n\r\n        case SET_NEW_PASSWORD_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                mewPasswordMessage:action.mewPasswordMessage\r\n            }\r\n        }\r\n        case SET_NEW_PASSWORD_ERROR: {\r\n            return {\r\n                ...state,\r\n                newPasswordError: action.newPasswordError\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_NEW_PASSWORD_MESSAGE='SET_NEW_PASSWORD_MESSAGE'\r\nconst SET_NEW_PASSWORD_ERROR='SET_NEW_PASSWORD_ERROR'\r\n\r\nexport type SetNewPasswordSuccessMessageACType = {\r\n    type: typeof SET_NEW_PASSWORD_MESSAGE,\r\n    mewPasswordMessage: string\r\n}\r\nexport type SetNewPasswordErrorACType = {\r\n    type: typeof SET_NEW_PASSWORD_ERROR,\r\n    newPasswordError: string\r\n}\r\n\r\nexport const setNewPasswordSuccessMessageAC = (mewPasswordMessage: string): SetNewPasswordSuccessMessageACType => {\r\n    return {type: 'SET_NEW_PASSWORD_MESSAGE', mewPasswordMessage}\r\n}\r\nexport const setNewPasswordErrorAC = (newPasswordError: string): SetNewPasswordErrorACType => {\r\n    return {type: 'SET_NEW_PASSWORD_ERROR', newPasswordError}\r\n}\r\n\r\nexport const setNewPasswordThunkCreator = (password: string, token:string) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            settingsAPI.setNewPassword(password,token)\r\n                .then((res) => {\r\n                    // console.log(res)\r\n                    dispatch(setNewPasswordSuccessMessageAC(res.data.info))\r\n                    dispatch(setNewPasswordErrorAC(''))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    dispatch(setNewPasswordErrorAC(error))\r\n\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n","// export let smth = v1();\r\n\r\n\r\nimport {Dispatch} from \"redux\";\r\nimport {loginAPI} from \"../../dal/API\";\r\nimport {AuthDataACResponseType, setAuthDataAC} from \"./authReducer\";\r\nimport {\r\n    setRegisterErrorAC,\r\n    SetRegisterErrorACType,\r\n    setRegisterStatusAC,\r\n    SetRegisterStatusACType\r\n} from \"./registerReducer\";\r\nimport {\r\n    setNewPasswordErrorAC,\r\n    SetNewPasswordErrorACType,\r\n    setNewPasswordSuccessMessageAC,\r\n    SetNewPasswordSuccessMessageACType\r\n} from \"./newPasswordReducer\";\r\n\r\nexport type initialStateType = typeof initialState\r\nconst initialState = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: '',\r\n    updated: '',\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n\r\n    error: '',\r\n    isLoading: false,\r\n}\r\n\r\n\r\ntype ActionTypes = SetLoginDataACType | SetLoginErrorACType | SetLoadingACType\r\n\r\nexport const loginReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SET_LOGIN_DATA: {\r\n            return {\r\n                ...state,\r\n                _id: action.loginData._id,\r\n                email: action.loginData.email,\r\n                name: action.loginData.name,\r\n                avatar: action.loginData.avatar,\r\n                publicCardPacksCount: action.loginData.publicCardPacksCount,\r\n                created: action.loginData.created,\r\n                updated: action.loginData.updated,\r\n                isAdmin: action.loginData.isAdmin,\r\n                verified: action.loginData.verified,\r\n                rememberMe: action.loginData.rememberMe,\r\n                error: '',\r\n            }\r\n        }\r\n\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_LOGIN_DATA = 'SET_LOGIN_DATA'\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_LOADING = 'SET_LOADING'\r\n\r\nexport type LoginDataResponseType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    avatar: string,\r\n    publicCardPacksCount: number,\r\n    created: string,\r\n    updated: string,\r\n    isAdmin: boolean,\r\n    verified: boolean,\r\n    rememberMe: boolean,\r\n}\r\nexport type SetLoginDataACType = {\r\n    type: typeof SET_LOGIN_DATA,\r\n    loginData: LoginDataResponseType\r\n}\r\n\r\nexport type SetLoginErrorACType = {\r\n    type: typeof SET_ERROR,\r\n    error: string\r\n}\r\nexport type SetLoadingACType = {\r\n    type: typeof SET_LOADING\r\n    isLoading: boolean\r\n}\r\n\r\nexport const setLoginDataAC = (loginData: LoginDataResponseType): SetLoginDataACType => {\r\n    return {type: 'SET_LOGIN_DATA', loginData}\r\n}\r\n\r\nexport const setLoginErrorAC = (error: string): SetLoginErrorACType => {\r\n    return {type: 'SET_ERROR', error}\r\n}\r\nexport const setLoadingAC = (isLoading: boolean): SetLoadingACType => {\r\n    return {type: 'SET_LOADING', isLoading}\r\n}\r\n\r\nexport const loginThunkCreator = (email: string, password: string, remember: boolean) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | AuthDataACResponseType | SetRegisterStatusACType | SetRegisterErrorACType\r\n            | SetNewPasswordErrorACType | SetNewPasswordSuccessMessageACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            loginAPI.login(email, password, remember)\r\n                .then((res) => {\r\n                    console.log(res)\r\n\r\n                    dispatch(setLoginDataAC(res.data))\r\n                    dispatch(setAuthDataAC(true))\r\n\r\n                    // reset register state\r\n                    dispatch(setRegisterStatusAC(0))\r\n                    dispatch(setRegisterErrorAC(''))\r\n\r\n                    //reset new Password state\r\n                    dispatch(setNewPasswordErrorAC(''))\r\n                    dispatch(setNewPasswordSuccessMessageAC(''))\r\n\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    dispatch(setLoginErrorAC(error))\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\nexport const logoutThunkCreator = () => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | AuthDataACResponseType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            loginAPI.logout()\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    dispatch(setLoginDataAC(res.data))\r\n                    dispatch(setAuthDataAC(false))\r\n\r\n                    // loader doesn't not appears\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + ' more details in console')\r\n                    dispatch(setLoginErrorAC(error))\r\n                    console.log('Error', error)\r\n\r\n                    // loader doesn't not appears\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './header.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleDown} from '@fortawesome/free-solid-svg-icons'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootType} from \"../../bll/state/store\";\r\nimport {logoutThunkCreator} from \"../../bll/state/loginReducer\";\r\n\r\nconst arrowDownElement = <FontAwesomeIcon className={style.arrow_down} icon={faAngleDown}/>\r\n\r\n\r\nconst Header = () => {\r\n\r\n    //for header background color\r\n    const isCurrentPageProfile=useSelector<AppRootType,boolean>(state=>state.app.isCurrentPageProfile);\r\n\r\n\r\n    const [isToggleCollapsed, setToggleCollapsed] = useState<boolean>(true);\r\n    const [isFeaturesSubMenuExpanded, setFeaturesSubMenuExpanded] = useState<boolean>(false);\r\n    const [isSettingsSubMenuExpanded, setSettingsSubMenuExpanded] = useState<boolean>(false);\r\n\r\n    let isAuth = useSelector<AppRootType, boolean>(state => state.auth.isAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        dispatch(logoutThunkCreator())\r\n    }\r\n\r\n    const onToggleMenu = () => {\r\n        setToggleCollapsed(!isToggleCollapsed);\r\n\r\n    }\r\n\r\n    const onExpandFeaturesSubMenu = () => {\r\n        if (isSettingsSubMenuExpanded) {\r\n            setSettingsSubMenuExpanded(false)\r\n        }\r\n        setFeaturesSubMenuExpanded(!isFeaturesSubMenuExpanded)\r\n\r\n    }\r\n    const onExpandSettingsSubMenu = () => {\r\n        if (isFeaturesSubMenuExpanded) {\r\n            setFeaturesSubMenuExpanded(false)\r\n        }\r\n        setSettingsSubMenuExpanded(!isSettingsSubMenuExpanded)\r\n    }\r\n\r\n    const onBlurFeaturesSubMenu = () => {\r\n        setFeaturesSubMenuExpanded(false)\r\n    }\r\n    const onBlurSettingsSubMenu = () => {\r\n        setSettingsSubMenuExpanded(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.header} style={isCurrentPageProfile ? {backgroundColor:'#1e2326'} : {backgroundColor:'transparent'}}>\r\n            <div className={style.container}\r\n                 style={!isToggleCollapsed ? {'backgroundColor': '#1e2326'} : {'backgroundColor': 'transparent'}}>\r\n\r\n                <div className={style.logo_wrapper}>\r\n                    <NavLink className={style.logo_link} to={'/home'}>\r\n                        Party<span>Cards</span>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <ul className={style.navbar}>\r\n                    <li>\r\n                        <NavLink activeClassName={style.active_link} className={style.link} to={'/home'}>Home</NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink activeClassName={style.active_link} className={style.link}\r\n                                 to={'/profile'}>Profile</NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink activeClassName={style.active_link} className={style.link}\r\n                                 to={'/features'}>Features {arrowDownElement}</NavLink>\r\n                        <ul className={style.sub_menu_wrapper}>\r\n                            <li>\r\n                                <NavLink activeClassName={style.active_link} className={style.sub_link}\r\n                                         to={'/feature0'}>Feature 0</NavLink>\r\n                            </li>\r\n\r\n                            {/*<li>*/}\r\n                            {/*    <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                            {/*             to={'/feature_1'}>Feature 1</NavLink>*/}\r\n                            {/*</li>*/}\r\n                            {/*<li>*/}\r\n                            {/*    <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                            {/*             to={'/feature_2'}>Feature 2</NavLink>*/}\r\n                            {/*</li>*/}\r\n\r\n                        </ul>\r\n\r\n                    </li>\r\n\r\n\r\n                    <li>\r\n                        <NavLink activeClassName={style.active_link} className={style.link}\r\n                                 to={'/password_restore'}>Restore</NavLink>\r\n                    </li>\r\n                    {/*<li>*/}\r\n                    {/*    <NavLink activeClassName={style.active_link} className={style.link}*/}\r\n                    {/*             to={'/settings'}>Settings {arrowDownElement}</NavLink>*/}\r\n                    {/*    <ul className={style.sub_menu_wrapper}>*/}\r\n                    {/*        <li>*/}\r\n                    {/*            <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                    {/*                     to={'/password_restore'}>Restore</NavLink>*/}\r\n                    {/*        </li>*/}\r\n\r\n                    {/*        <li>*/}\r\n                    {/*            <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                    {/*                     to={'/new_password'}>New password</NavLink>*/}\r\n                    {/*        </li>*/}\r\n\r\n                    {/*    </ul>*/}\r\n                    {/*</li>*/}\r\n\r\n                    <li>\r\n                        <NavLink activeClassName={style.active_link} className={style.link}\r\n                                 to={'/register'}>Register</NavLink>\r\n                    </li>\r\n\r\n                    {\r\n                        isAuth ?\r\n                            <li>\r\n                                <NavLink onClick={logout}\r\n                                         className={style.logout + ' ' + style.link}\r\n                                         to={'#'}>Log Out\r\n                                </NavLink>\r\n                            </li>\r\n                            :\r\n                            <li>\r\n                                <NavLink activeClassName={style.active_link} className={style.link}\r\n                                         to={'/login'}>Log In\r\n                                </NavLink>\r\n                            </li>\r\n                    }\r\n\r\n\r\n                </ul>\r\n\r\n                <button onClick={onToggleMenu} className={isToggleCollapsed ? style.btn_toggler : style.btn_collapse}>\r\n                    <span/>\r\n                    <span/>\r\n                    <span/>\r\n                </button>\r\n\r\n            </div>\r\n\r\n\r\n            <ul className={style.vertical_navbar} style={!isToggleCollapsed ? {\r\n                'visibility': 'visible',\r\n                'opacity': '1',\r\n                'zIndex': 1001\r\n            } : {'visibility': 'hidden', 'opacity': '0'}}>\r\n                <li>\r\n                    <NavLink activeClassName={style.active_link} className={style.link} to={'/home'}>Home</NavLink>\r\n                </li>\r\n\r\n                <li>\r\n                    <NavLink activeClassName={style.active_link} className={style.link}\r\n                             to={'/profile'}>Profile</NavLink>\r\n                </li>\r\n\r\n                <li onClick={onExpandFeaturesSubMenu} onBlur={onBlurFeaturesSubMenu}>\r\n                    <NavLink activeClassName={style.active_link} className={style.link}\r\n                             to={'/features'}>Features {arrowDownElement}</NavLink>\r\n\r\n                    <ul className={style.features_vertical_sub_menu_wrapper}\r\n                        style={isFeaturesSubMenuExpanded ? {'visibility': 'visible'} : {'visibility': 'hidden'}}>\r\n                        <li>\r\n                            <NavLink activeClassName={style.active_link} className={style.sub_link}\r\n                                     to={'/feature0'}>Feature 0</NavLink>\r\n                        </li>\r\n\r\n                        {/*<li>*/}\r\n                        {/*    <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                        {/*             to={'/feature_1'}>Feature 1</NavLink>*/}\r\n                        {/*</li>*/}\r\n                        {/*<li>*/}\r\n                        {/*    <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                        {/*             to={'/feature_2'}>Feature 2</NavLink>*/}\r\n                        {/*</li>*/}\r\n\r\n                    </ul>\r\n                </li>\r\n\r\n\r\n                <li>\r\n                    <NavLink activeClassName={style.active_link} className={style.link}\r\n                             to={'/password_restore'}>Restore</NavLink>\r\n                </li>\r\n                {/*<li onClick={onExpandSettingsSubMenu} onBlur={onBlurSettingsSubMenu}>*/}\r\n                {/*    <NavLink activeClassName={style.active_link} className={style.link}*/}\r\n                {/*             to={'/settings'}>Settings {arrowDownElement}</NavLink>*/}\r\n\r\n\r\n                {/*    <ul className={style.settings_vertical_sub_menu_wrapper}*/}\r\n                {/*        style={isSettingsSubMenuExpanded ? {'visibility': 'visible'} : {'visibility': 'hidden'}}>*/}\r\n                {/*        <li>*/}\r\n                {/*            <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                {/*                     to={'/password_restore'}>Restore</NavLink>*/}\r\n                {/*        </li>*/}\r\n\r\n                {/*        <li>*/}\r\n                {/*            <NavLink activeClassName={style.active_link} className={style.sub_link}*/}\r\n                {/*                     to={'/new_password'}>New password</NavLink>*/}\r\n                {/*        </li>*/}\r\n\r\n                {/*    </ul>*/}\r\n\r\n                {/*</li>*/}\r\n\r\n\r\n                <li>\r\n                    <NavLink activeClassName={style.active_link} className={style.link}\r\n                             to={'/register'}>Register</NavLink>\r\n                </li>\r\n\r\n                {\r\n                    isAuth ?\r\n                        <li>\r\n                            <NavLink className={style.logout + ' ' + style.link}\r\n                                     to={'#'}>Log\r\n                                Out</NavLink>\r\n                        </li>\r\n                        :\r\n                        <li>\r\n                            <NavLink activeClassName={style.active_link} className={style.link} to={'/login'}>Log\r\n                                In</NavLink>\r\n                        </li>\r\n                }\r\n\r\n\r\n            </ul>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport style from './Home.module.scss'\r\nimport Particles from 'react-particles-js';\r\n\r\n\r\n// const particlesOptions = {\r\n//     particles: {\r\n//         number: {\r\n//             value: 80,\r\n//             density: {\r\n//                 enable: true,\r\n//                 value_area: 800\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst particlesOptions: any = {\r\n\r\n    \"particles\": {\r\n        \"number\": {\r\n            \"value\": 80,\r\n            \"density\": {\r\n                \"enable\": true,\r\n                \"value_area\": 800\r\n            }\r\n        },\r\n        \"color\": {\r\n            \"value\": \"#ffffff\"\r\n        },\r\n        \"shape\": {\r\n            \"type\": \"circle\",\r\n            \"stroke\": {\r\n                \"width\": 0,\r\n                \"color\": \"#000000\"\r\n            },\r\n            \"polygon\": {\r\n                \"nb_sides\": 5\r\n            },\r\n            \"image\": {\r\n                \"width\": 100,\r\n                \"height\": 100\r\n            }\r\n        },\r\n        \"opacity\": {\r\n            \"value\": 0.5,\r\n            \"random\": false,\r\n            \"anim\": {\r\n                \"enable\": false,\r\n                \"speed\": 1,\r\n                \"opacity_min\": 0.1,\r\n                \"sync\": false\r\n            }\r\n        },\r\n        \"size\": {\r\n            \"value\": 5,\r\n            \"random\": true,\r\n            \"anim\": {\r\n                \"enable\": false,\r\n                \"speed\": 40,\r\n                \"size_min\": 0.1,\r\n                \"sync\": false\r\n            }\r\n        },\r\n        \"line_linked\": {\r\n            \"enable\": true,\r\n            \"distance\": 150,\r\n            \"color\": \"#ffffff\",\r\n            \"opacity\": 0.4,\r\n            \"width\": 1\r\n        },\r\n        \"move\": {\r\n            \"enable\": true,\r\n            \"speed\": 6,\r\n            \"direction\": \"none\",\r\n            \"random\": false,\r\n            \"straight\": false,\r\n            \"out_mode\": \"out\",\r\n            \"attract\": {\r\n                \"enable\": false,\r\n                \"rotateX\": 600,\r\n                \"rotateY\": 1200\r\n            }\r\n        }\r\n    },\r\n    \"interactivity\": {\r\n        \"detect_on\": \"canvas\",\r\n        \"events\": {\r\n            \"onhover\": {\r\n                \"enable\": true,\r\n                \"mode\": \"repulse\"\r\n            },\r\n            \"onclick\": {\r\n                \"enable\": true,\r\n                \"mode\": \"push\"\r\n            },\r\n            \"resize\": true\r\n        },\r\n        \"modes\": {\r\n            \"grab\": {\r\n                \"distance\": 400,\r\n                \"line_linked\": {\r\n                    \"opacity\": 1\r\n                }\r\n            },\r\n            \"bubble\": {\r\n                \"distance\": 400,\r\n                \"size\": 40,\r\n                \"duration\": 2,\r\n                \"opacity\": 8,\r\n                \"speed\": 3\r\n            },\r\n            \"repulse\": {\r\n                \"distance\": 200\r\n            },\r\n            \"push\": {\r\n                \"particles_nb\": 4\r\n            },\r\n            \"remove\": {\r\n                \"particles_nb\": 2\r\n            }\r\n        }\r\n    },\r\n    \"retina_detect\": true,\r\n    \"config_demo\": {\r\n        \"hide_card\": false,\r\n        \"background_color\": \"#b61924\",\r\n        \"background_image\": \"\",\r\n        \"background_position\": \"50% 50%\",\r\n        \"background_repeat\": \"no-repeat\",\r\n        \"background_size\": \"cover\"\r\n    }\r\n}\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className={style.home}>\r\n            <Particles className={style.particles} params={particlesOptions}/>\r\n            <div className={style.title_wrapper}>\r\n                <h1>Alexey <br/>Gorbachevskiy</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Redirect} from \"react-router\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootType} from \"../../bll/state/store\";\r\n\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n\r\n    function RedirectComponent(props: any) {\r\n        const isAuth = useSelector<AppRootType, boolean>(state => state.auth.isAuth);\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n        return <Component {...props}/>\r\n\r\n    }\r\n\r\n\r\n    return RedirectComponent\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../../dal/API\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    name: '',\r\n    avatar: '',\r\n}\r\n\r\n\r\ntype ActionTypes = SetProfileInfoACType\r\n\r\nexport const profileReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SAVE_PROFILE_INFO: {\r\n            return {\r\n                ...state,\r\n                name: action.name,\r\n                avatar: action.avatar,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SAVE_PROFILE_INFO = 'SAVE_PROFILE_INFO'\r\n\r\nexport type SetProfileInfoACType = {\r\n    type: typeof SAVE_PROFILE_INFO,\r\n    name: string,\r\n    avatar:string\r\n}\r\n\r\nexport const saveProfileInfoAC = (name: string, avatar:string): SetProfileInfoACType => {\r\n    return {type: 'SAVE_PROFILE_INFO', name, avatar}\r\n}\r\n\r\nexport const changeInfoThunkCreator = (name:string, avatar:string) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            profileAPI.changeInfo(name, avatar)\r\n                .then((res) => {\r\n                    saveProfileInfoAC(res.data.name,res.data.avatar)\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    // const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n\r\n                    console.log('Error', e)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport obj from \"./Preloader.module.css\";\r\n\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <>\r\n            <img className={obj.preloader} src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader;\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport style from './Profile.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootType} from \"../../../bll/state/store\";\r\nimport {withAuthRedirect} from \"../../../utilities/hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {setIsCurrentPageProfileAC} from \"../../../bll/state/appReducer\";\r\nimport {changeInfoThunkCreator} from \"../../../bll/state/profileReducer\";\r\nimport obj from \"../../common/preloader/Preloader.module.css\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\n\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    let loginData = useSelector<AppRootType, any>(state => state.login);\r\n    let isAuth = useSelector<AppRootType, boolean>(state => state.auth.isAuth);\r\n    let loginName = useSelector<AppRootType, string>(state => state.login.name);\r\n    let loginAvatar = useSelector<AppRootType, string>(state => state.login.avatar);\r\n    let loginEmail = useSelector<AppRootType, string>(state => state.login.email);\r\n    const [name, setName] = useState<string>(loginName);\r\n    const [avatar, setAvatar] = useState<string>(loginAvatar);\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n\r\n    const onChangeNameInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const onChangeAvatarInput=(e: ChangeEvent<HTMLInputElement>)=>{\r\n        setAvatar(e.currentTarget.value)\r\n    }\r\n    const [isChangeBtnClicked, setIsChangeBtnClicked] = useState(false);\r\n    const changeInfo = () => {\r\n        setIsChangeBtnClicked(true);\r\n    }\r\n    const saveInfo = () => {\r\n        dispatch(changeInfoThunkCreator(name,avatar))\r\n        setIsChangeBtnClicked(false);\r\n    }\r\n\r\n\r\n\r\n    // for header background\r\n    useEffect(() => {\r\n        dispatch(setIsCurrentPageProfileAC(true))\r\n\r\n        return () => {\r\n            dispatch(setIsCurrentPageProfileAC(false))\r\n        }\r\n    }, [])\r\n\r\n\r\n    if (isLoading) {\r\n        return <div className=\"App\" style={{display:'flex', justifyContent:'center',alignItems:'center'}}>\r\n            <Preloader/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={style.profile}>\r\n\r\n            {\r\n                isAuth ?\r\n                    <>\r\n                        <div className={style.profile_info}>\r\n                            <div className={style.profile_info_header}>\r\n                                {/*<img src={`${loginData.avatar}`} alt=\"Avatar\"/>*/}\r\n                                <img className={style.avatar} src={ `${avatar ? avatar : process.env.PUBLIC_URL+'/favicon.ico'}`}\r\n                                     alt=\"Avatar\"/>\r\n\r\n                                <div className={style.profile_info_header_content}>\r\n                                    {\r\n                                        isLoading ?\r\n                                            <img style={{position:'absolute'}} className={obj.preloader} src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n                                            : ''\r\n                                    }\r\n                                    {\r\n                                        isChangeBtnClicked ?\r\n                                            <>\r\n                                            <div>Name:\r\n                                                <input onChange={onChangeNameInput} value={name}/>\r\n                                            </div>\r\n                                                <div>Avatar:\r\n                                                    <input onChange={onChangeAvatarInput} value={avatar}/>\r\n                                                </div>\r\n\r\n                                            </>\r\n                                            :\r\n                                            <div>Name: <span>{name}</span></div>\r\n                                    }\r\n                                    <div>Email: <span>{loginEmail}</span></div>\r\n\r\n                                    {\r\n                                        isChangeBtnClicked ?\r\n                                            <button onClick={saveInfo}\r\n                                                    className={style.profile_info_save_btn}>Save\r\n                                            </button>\r\n                                            :\r\n                                            <button onClick={changeInfo}\r\n                                                    className={style.profile_info_change_btn}>Change\r\n                                            </button>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div className={style.extra_info}>\r\n                                <p>Card Packs Count: {loginData.publicCardPacksCount}</p>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className={style.profile_settings}>\r\n                            <h2>Profile Settings</h2>\r\n\r\n                            <p>Id: {loginData._id}</p>\r\n                            <p>Created: {loginData.created}</p>\r\n                            <p>Updated: {loginData.updated}</p>\r\n                            <p>Is Admin: {loginData.isAdmin ? 'Yes' : 'No'} </p>\r\n                            <p>Is Verified: {loginData.verified ? 'Yes' : 'No'} </p>\r\n                            <p>Is Remembered: {loginData.rememberMe ? 'Yes' : 'No'} </p>\r\n                        </div>\r\n                    </>\r\n                    : ''\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(Profile)\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react';\r\nimport style from './Input.module.scss'\r\n\r\n// type InputPropsType={\r\n//     placeholder?: string\r\n//     value?:string\r\n//     onChange?:()=>void\r\n// }\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { onEnter?: () => void };\r\n\r\n\r\nconst Input = (propsI: InputPropsType) => {\r\n\r\n    const {onEnter, ...props} = propsI;\r\n\r\n    const onEnterCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            onEnter && onEnter();\r\n        }\r\n    }\r\n    return (\r\n            <input\r\n                onKeyPress={onEnterCallback}\r\n                className={style.input}\r\n                type={'text'}\r\n                {...propsI}\r\n            />\r\n    );\r\n}\r\n\r\n\r\nexport default Input;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport style from './Checkbox.module.scss'\r\n\r\n\r\ntype CheckboxPropsType =\r\n    DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { labelText?: string };\r\n\r\n\r\nconst Checkbox = (props: CheckboxPropsType) => {\r\n\r\n    return (\r\n        <label className={style.label}>\r\n            <input\r\n                className={style.checkbox}\r\n                type={'checkbox'}\r\n                {...props}\r\n            />\r\n            <span> {props.labelText}</span>\r\n        </label>\r\n    );\r\n}\r\n\r\n\r\nexport default Checkbox;\r\n","import React, {DetailedHTMLProps, HTMLAttributes} from 'react';\r\nimport style from './Button.module.scss'\r\n\r\n\r\n//\r\n// type ButtonPropsType = {\r\n//     children: string\r\n//     onClick?: () => void\r\n// }\r\n\r\ntype ButtonPropsType=DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\r\n\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n\r\n    return (\r\n        <div className={style.container} {...props}>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Button;\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './Login.module.scss'\r\nimport Input from \"../../common/input/Input\";\r\nimport Checkbox from \"../../common/checkbox/Checkbox\";\r\nimport Button from \"../../common/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginThunkCreator, setLoginErrorAC} from \"../../../bll/state/loginReducer\";\r\nimport {AppRootType} from \"../../../bll/state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport obj from \"../../common/preloader/Preloader.module.css\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [remember, setRemember] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const stateError = useSelector<AppRootType, string>(state => state.login.error)\r\n    // const stateEmail = useSelector<AppRootType, string>(state => state.login.email)\r\n    const isAuth = useSelector<AppRootType, boolean>(state => state.auth.isAuth);\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n    const registerStatus = useSelector<AppRootType, number>(state => state.register.status)\r\n    const newPasswordMessage = useSelector<AppRootType, string>(state => state.newPassword.mewPasswordMessage)\r\n    const newPasswordError = useSelector<AppRootType, string>(state => state.newPassword.newPasswordError)\r\n\r\n    const onLogin = () => {\r\n        if (email.trim() === '' || password.trim() === '') {\r\n            dispatch(setLoginErrorAC('All fields should be filled'))\r\n        } else {\r\n            dispatch(setLoginErrorAC(''))\r\n            dispatch(loginThunkCreator(email, password, remember));\r\n        }\r\n    }\r\n\r\n    const [errorStyle, setErrorStyle] = useState({})\r\n\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            setEmail('');\r\n            setPassword('');\r\n            setRemember(false);\r\n            dispatch(setLoginErrorAC(''))\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (stateError) {\r\n            setErrorStyle({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n        } else {\r\n            setErrorStyle({})\r\n        }\r\n\r\n    }, [stateError])\r\n\r\n    // if (isLoading) {\r\n    //     return (\r\n    //         <div className=\"App\" style={{display:'flex', justifyContent:'center',alignItems:'center'}}>\r\n    //             <Preloader/>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to=\"/profile\"/>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.login}>\r\n\r\n            <div className={style.login_form}>\r\n                <h2>Log In</h2>\r\n\r\n                {\r\n                    registerStatus === 201 ?\r\n                        <p style={{color: 'green', fontSize: '18px', textAlign: 'center', maxWidth: '70%'}}>You are\r\n                            successfully\r\n                            registered. Now\r\n                            you need to login.</p> : ''\r\n                }\r\n                {\r\n                    newPasswordMessage && !newPasswordError ?\r\n                        <p style={{color: 'green', fontSize: '18px', textAlign: 'center', maxWidth: '70%'}}>\r\n                            Password was successfully changed. You need to log in now</p>\r\n                        : ''\r\n                }\r\n\r\n                {/*<div className={style.credentials}>*/}\r\n                {/*    <p>Email: \"nya-admin@nya.nya\" </p>*/}\r\n\r\n                {/*    <p> Password: \"1qazxcvBG\"</p>*/}\r\n                {/*</div>*/}\r\n\r\n                <div className={style.form}>\r\n                    <Input style={errorStyle} onChange={(e) => {\r\n                        setEmail(e.currentTarget.value)\r\n                    }}\r\n                           value={email}\r\n                           className={style.input + ' ' + style.email}\r\n                           placeholder={'Email'}\r\n                    />\r\n                    <Input style={errorStyle} onChange={(e) => {\r\n                        setPassword(e.currentTarget.value)\r\n                    }}\r\n                           value={password}\r\n                           className={style.input + ' ' + style.password}\r\n                           placeholder={'Password'}\r\n                           type={'password'}\r\n                    />\r\n                    <label>\r\n                        <Checkbox\r\n                            style={errorStyle}\r\n                            checked={remember}\r\n                            onChange={(e) => {\r\n                                setRemember(!remember)\r\n                            }}/> Remember Me?\r\n                    </label>\r\n                </div>\r\n                <p className={style.error}>{stateError}</p>\r\n\r\n                <Button onClick={onLogin} style={{width: '150px'}}>Log In</Button>\r\n\r\n\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                <img style={{position: 'absolute', zIndex: 1200}} className={obj.preloader}\r\n                     src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './Register.module.scss'\r\nimport Input from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerThunkCreator} from \"../../../bll/state/registerReducer\";\r\nimport {AppRootType} from \"../../../bll/state/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport obj from \"../../common/preloader/Preloader.module.css\";\r\n\r\n\r\nconst Register = () => {\r\n    const registerError = useSelector<AppRootType, string>(state => state.register.registerError)\r\n    const registerStatus = useSelector<AppRootType, number>(state => state.register.status)\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n    const dispatch = useDispatch();\r\n    const [errorStyle1, setErrorStyle1] = useState({})\r\n    const [errorStyle2, setErrorStyle2] = useState({})\r\n\r\n    useEffect(() => {\r\n        if (registerError) {\r\n            setErrorStyle1({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n            setErrorStyle2({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n        } else {\r\n            setErrorStyle1({})\r\n            setErrorStyle2({})\r\n        }\r\n\r\n    }, [registerError])\r\n\r\n\r\n    const formik = useFormik({\r\n\r\n\r\n        validate: (values) => {\r\n            if (!values.email) {\r\n                setErrorStyle1({\r\n                    borderColor: '#cf0c0c',\r\n                })\r\n                return {\r\n                    email: 'Email is required'\r\n                }\r\n            }\r\n            else{\r\n                setErrorStyle1({})\r\n            }\r\n\r\n            if (!values.password) {\r\n                setErrorStyle2({\r\n                    borderColor: '#cf0c0c',\r\n                })\r\n                return {\r\n                    password: 'Password is required'\r\n                }\r\n            }\r\n            else{\r\n                setErrorStyle2({})\r\n            }\r\n\r\n\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(registerThunkCreator(values))\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (registerStatus === 201) {\r\n            formik.resetForm();\r\n        }\r\n    }, [registerStatus, registerError])\r\n\r\n    if (registerStatus === 201) {\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n\r\n    return (\r\n        <div className={style.register}>\r\n            <div className={style.register_form}>\r\n                <h2>Registration</h2>\r\n\r\n\r\n                <div className={style.form}>\r\n                    <Input\r\n                        style={errorStyle1}\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.email}\r\n                        className={style.input + ' ' + style.email}\r\n                        placeholder={'Email'}\r\n\r\n                    />\r\n                    {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div> : null}\r\n                    <Input\r\n                        style={errorStyle2}\r\n                        className={style.input + ' ' + style.password}\r\n                        placeholder={'Password'}\r\n                        type={'password'}\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.password}\r\n                    />\r\n                    {formik.errors.password ? <div style={{color:'red'}}>{formik.errors.password}</div> : null}\r\n                </div>\r\n\r\n\r\n                {registerError ? <div style={{color:'red'}}>{registerError}</div>  : ''}\r\n\r\n                <Button onClick={() => formik.handleSubmit()} style={{width: '150px'}}>Register</Button>\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                <img style={{position: 'absolute', zIndex: 1200}} className={obj.preloader}\r\n                     src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport style from './Settings.module.scss'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Settings=()=>{\r\n\r\n\r\n    return <Redirect to=\"/password_restore\"/>;\r\n\r\n    return (\r\n        <div className={style.settings}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './NewPassword.module.scss'\r\nimport Input from \"../../../common/input/Input\";\r\nimport Button from \"../../../common/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {setNewPasswordErrorAC, setNewPasswordThunkCreator} from \"../../../../bll/state/newPasswordReducer\";\r\nimport {AppRootType} from \"../../../../bll/state/store\";\r\nimport obj from \"../../../common/preloader/Preloader.module.css\";\r\n\r\n\r\nconst NewPassword = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [password, setPassword] = useState('');\r\n    let newPasswordError = useSelector<AppRootType, string>(state => state.newPassword.newPasswordError);\r\n    let successMessage = useSelector<AppRootType, string>(state => state.newPassword.mewPasswordMessage);\r\n    const [errorStyle, setErrorStyle] = useState({})\r\n\r\n    const {token} = useParams();\r\n    const sendLinkToEmail = () => {\r\n        if(password.trim()===''){\r\n            setErrorStyle({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n            dispatch(setNewPasswordErrorAC('All fields should be filled'))\r\n        }\r\n        else{\r\n            dispatch(setNewPasswordThunkCreator(password,token));\r\n            setPassword('');\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!newPasswordError && successMessage){\r\n            setPassword('');\r\n        }\r\n        if(!newPasswordError){\r\n            setErrorStyle({})\r\n        }\r\n        else{\r\n            setErrorStyle({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n        }\r\n    },[newPasswordError,successMessage])\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setNewPasswordErrorAC(''))\r\n        }\r\n    },[])\r\n\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n    // if (isLoading) {\r\n    //     return (\r\n    //         <div className=\"App\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n    //             <Preloader/>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    if(successMessage && !newPasswordError){\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n\r\n    return (\r\n        <div className={style.new_password}>\r\n            <div className={style.new_password_form}>\r\n                <h2>New Password</h2>\r\n\r\n\r\n                <div className={style.form}>\r\n                    <Input style={errorStyle} onChange={(e) => {\r\n                        setPassword(e.currentTarget.value)\r\n                    }}\r\n                           type={'password'}\r\n                           value={password}\r\n                           className={style.input + ' ' + style.password}\r\n                           placeholder={'Type new password'}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    newPasswordError && <p className={style.error}>{newPasswordError}</p>\r\n                }\r\n                {\r\n                    successMessage && <p className={style.successMessage}>{successMessage}</p>\r\n                }\r\n\r\n\r\n                <Button onClick={sendLinkToEmail} style={{width: '150px'}}>Save</Button>\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                <img style={{position: 'absolute', zIndex: 1200}} className={obj.preloader}\r\n                     src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import {Dispatch} from \"redux\";\r\nimport {settingsAPI} from \"../../dal/API\";\r\nimport {setLoadingAC, SetLoadingACType} from \"./loginReducer\";\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState= {\r\n    passwordRestoreError:'',\r\n    passwordRestoreSuccessMessage:'',\r\n}\r\n\r\n\r\n\r\n\r\ntype ActionTypes = setSettingsErrorACType | setSettingsSuccessMessageACType\r\n\r\nexport const passwordRestoreReducer = (state: initialStateType = initialState, action: ActionTypes): initialStateType=> {\r\n    switch (action.type) {\r\n\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                passwordRestoreError:action.passwordRestoreError\r\n            }\r\n        }\r\n        case SET_SUCCESS_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                passwordRestoreSuccessMessage:action.passwordRestoreSuccessMessage\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nconst SET_ERROR='SET_ERROR'\r\nconst SET_SUCCESS_MESSAGE='SET_SUCCESS_MESSAGE'\r\n\r\nexport type setSettingsErrorACType = {\r\n    type: typeof SET_ERROR,\r\n    passwordRestoreError: string\r\n}\r\nexport type setSettingsSuccessMessageACType = {\r\n    type: typeof SET_SUCCESS_MESSAGE,\r\n    passwordRestoreSuccessMessage: string\r\n}\r\n\r\nexport const setSettingsErrorAC = (passwordRestoreError: string): setSettingsErrorACType => {\r\n    return {type: 'SET_ERROR', passwordRestoreError}\r\n}\r\nexport const setSettingsSuccessMessageAC = (passwordRestoreSuccessMessage: string): setSettingsSuccessMessageACType => {\r\n    return {type: 'SET_SUCCESS_MESSAGE', passwordRestoreSuccessMessage}\r\n}\r\n\r\n\r\nexport const restorePasswordThunkCreator = (email: string) => {\r\n    return (\r\n        (dispatch: Dispatch<ActionTypes | SetLoadingACType>) => {\r\n\r\n            // loader appears\r\n            dispatch(setLoadingAC(true))\r\n\r\n            settingsAPI.restore(email)\r\n                .then((res) => {\r\n                    // console.log(res)\r\n                    dispatch(setSettingsSuccessMessageAC(res.data.info))\r\n                    dispatch(setSettingsErrorAC(''))\r\n                    dispatch(setLoadingAC(false))\r\n\r\n                })\r\n                .catch((e) => {\r\n                    const error = e.response ? e.response.data.error : (e.message + 'more details in console')\r\n                    dispatch(setSettingsErrorAC(error))\r\n                    console.log('Error', error)\r\n\r\n                    dispatch(setLoadingAC(false))\r\n                })\r\n        }\r\n    )\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './PasswordRestore.module.scss'\r\nimport Input from \"../../../common/input/Input\";\r\nimport Button from \"../../../common/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    restorePasswordThunkCreator,\r\n    setSettingsErrorAC,\r\n    setSettingsSuccessMessageAC\r\n} from \"../../../../bll/state/passwordRestoreReducer\";\r\nimport {AppRootType} from \"../../../../bll/state/store\";\r\nimport obj from \"../../../common/preloader/Preloader.module.css\";\r\n\r\n\r\nconst PasswordRestore = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [email, setEmail] = useState('');\r\n    let passwordRestoreError = useSelector<AppRootType, string>(state => state.passwordRestore.passwordRestoreError);\r\n    let successMessage = useSelector<AppRootType, string>(state => state.passwordRestore.passwordRestoreSuccessMessage);\r\n    const [errorStyle, setErrorStyle] = useState({})\r\n    const sendLinkToEmail = () => {\r\n\r\n        if(email.trim()===''){\r\n            dispatch(setSettingsErrorAC('All fields should be filled'))\r\n        }\r\n        else{\r\n            dispatch(setSettingsErrorAC(''))\r\n            dispatch(restorePasswordThunkCreator(email));\r\n            setTimeout(() => {\r\n                dispatch(setSettingsSuccessMessageAC(''))\r\n                successMessage = '';\r\n            }, 4000)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!passwordRestoreError && successMessage){\r\n            setEmail('');\r\n        }\r\n        if(!passwordRestoreError){\r\n            setErrorStyle({})\r\n        }\r\n        else{\r\n            setErrorStyle({\r\n                borderColor: '#cf0c0c',\r\n            })\r\n        }\r\n    },[passwordRestoreError,successMessage])\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setSettingsErrorAC(''))\r\n            setEmail('');\r\n        }\r\n    },[])\r\n\r\n\r\n    const isLoading = useSelector<AppRootType, boolean>(state => state.login.isLoading);\r\n\r\n\r\n    // if (isLoading) {\r\n    //     return (\r\n    //         <div className=\"App\" style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n    //             <Preloader/>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n        <div className={style.password_restore}>\r\n            <div className={style.password_restore_form}>\r\n                <h2>Restore Password</h2>\r\n\r\n\r\n                <div className={style.form}>\r\n                    <Input style={errorStyle} onChange={(e) => {\r\n                        setEmail(e.currentTarget.value)\r\n                    }}\r\n                           value={email}\r\n                           className={style.input + ' ' + style.email}\r\n                           placeholder={'Type your email'}\r\n                    />\r\n                </div>\r\n                {\r\n                    passwordRestoreError && <p className={style.error}>{passwordRestoreError}</p>\r\n                }\r\n                {\r\n                    successMessage && <p className={style.successMessage}>{successMessage}</p>\r\n                }\r\n\r\n\r\n                <Button onClick={sendLinkToEmail} style={{width: '150px'}}>Send</Button>\r\n            </div>\r\n            {\r\n                isLoading &&\r\n                <img style={{position: 'absolute', zIndex: 1200}} className={obj.preloader}\r\n                     src={process.env.PUBLIC_URL + '/images/spinner.svg'} alt={'Preloader svg'}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordRestore\r\n","import React from 'react';\r\nimport style from './Features.module.scss'\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../../utilities/hoc/withAuthRedirect\";\r\n\r\n\r\nconst Features = () => {\r\n\r\n\r\n    return (\r\n        <div className={style.features}>\r\n            Features\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(Features)\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './Feature0.module.scss'\r\nimport Button from \"../../main/ui/common/button/Button\";\r\nimport Input from \"../../main/ui/common/input/Input\";\r\nimport Checkbox from \"../../main/ui/common/checkbox/Checkbox\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../main/utilities/hoc/withAuthRedirect\";\r\n\r\nconst Feature0 = () => {\r\n\r\n\r\n    const [checkboxValue, setCheckboxValue] = useState(false);\r\n    const onCheckboxClick = () => {\r\n        setCheckboxValue(!checkboxValue);\r\n    }\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.feature0}>\r\n            <h2>\r\n                Common Components\r\n            </h2>\r\n\r\n            <div className={style.common}>\r\n                <div className={style.checkbox_wrapper}>\r\n                    <Checkbox onChange={onCheckboxClick} checked={checkboxValue} labelText={'Hello'}/>\r\n                </div>\r\n\r\n                <div className={style.input_wrapper}>\r\n                    <Input onChange={onInputChange} value={inputValue} placeholder={'Hi there'}/>\r\n                </div>\r\n\r\n                <div className={style.btn_wrapper}>\r\n                    <Button>Hi all</Button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n)(Feature0)\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Header from \"./main/ui/header/header\";\r\nimport {Redirect, Route,} from \"react-router-dom\";\r\nimport {AppRootType} from \"./main/bll/state/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Home from \"./main/ui/routes/home/Home\";\r\nimport Profile from \"./main/ui/routes/profile/Profile\";\r\nimport Login from \"./main/ui/routes/login/Login\";\r\nimport Register from \"./main/ui/routes/register/Register\";\r\nimport Settings from \"./main/ui/routes/settings/Settings\";\r\nimport NewPassword from \"./main/ui/routes/settings/newPassword/NewPassword\";\r\nimport PasswordRestore from \"./main/ui/routes/settings/passwordRestore/PasswordRestore\";\r\nimport Features from \"./main/ui/routes/features/Features\";\r\nimport Feature0 from \"./features/f0-test/Feature0\";\r\nimport Preloader from \"./main/ui/common/preloader/Preloader\";\r\nimport {initializeAppThunkCreator} from \"./main/bll/state/appReducer\";\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userId = useSelector<AppRootType, string>(state => state.login._id);\r\n    useEffect(() => {\r\n        if(!userId){\r\n            dispatch(initializeAppThunkCreator());\r\n        }\r\n\r\n    }, [])\r\n\r\n    const initialized = useSelector<AppRootType, boolean>(state => state.app.initialized);\r\n    if (!initialized) {\r\n        return(\r\n            <div className=\"App\" style={{display:'flex', justifyContent:'center',alignItems:'center'}}>\r\n                <Preloader/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Route exact path='/' render={() => <Redirect to={'/home'}/>}/>\r\n            <Route path='/home' render={() => <Home/>}/>\r\n            <Route path='/profile' render={() => <Profile/>}/>\r\n            <Route path='/login' render={() => <Login/>}/>\r\n            <Route path='/register' render={() => <Register/>}/>\r\n            <Route path='/settings' render={() => <Settings/>}/>\r\n            <Route path='/new_password/:token' render={() => <NewPassword/>}/>\r\n            <Route path='/password_restore' render={() => <PasswordRestore/>}/>\r\n            <Route path='/features' render={() => <Features/>}/>\r\n            <Route path='/feature0' render={() => <Feature0/>}/>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {registerReducer} from \"./registerReducer\";\r\nimport {passwordRestoreReducer} from \"./passwordRestoreReducer\";\r\nimport {newPasswordReducer} from \"./newPasswordReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    passwordRestore: passwordRestoreReducer,\r\n    newPassword: newPasswordReducer,\r\n    profile: profileReducer,\r\n})\r\n\r\n\r\nexport type AppRootType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/bll/state/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    // </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feature0\":\"Feature0_feature0__3WLOo\",\"common\":\"Feature0_common__g-tSn\",\"input_wrapper\":\"Feature0_input_wrapper__3Jgy2\",\"btn_wrapper\":\"Feature0_btn_wrapper__283DC\",\"checkbox_wrapper\":\"Feature0_checkbox_wrapper__25EUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__AjyEs\",\"particles\":\"Home_particles__36Grd\",\"title_wrapper\":\"Home_title_wrapper__3X7vQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainColor\":\"#f07f81\",\"label\":\"Checkbox_label__2X1Yg\",\"checkbox\":\"Checkbox_checkbox__2weTq\"};"],"sourceRoot":""}